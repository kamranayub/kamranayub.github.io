<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<link rel="self" href="https://kamranicus.com/" />
	<id>https://kamranicus.com/</id>
	<title>Kamranicus | Kamran Ayub</title>
	<rights>2020</rights>
	<updated>2020-08-25T14:03:55Z</updated>
	<subtitle>Kamran Ayub</subtitle>
	<entry>
		<link href="https://kamranicus.com/posts/2020-07-29-webdriverio-out-of-memory-allocation-error.md" />
		<id>https://kamranicus.com/posts/2020-07-29-webdriverio-out-of-memory-allocation-error.md</id>
		<title>JavaScript heap out of memory with WebdriverIO</title>
		<updated>2020-07-29T13:50:00Z</updated>
		<content>&lt;p&gt;Throughout &lt;a href="https://bit.ly/KamranOnPluralsight"&gt;working on a course&lt;/a&gt; you usually run into bugs and issues that throw you for a loop for awhile. In this case, it was doubly frustrating because I had previously set up &lt;a href="https://webdriver.io"&gt;webdriverio&lt;/a&gt; to run in my continuous integration environment (GitHub Actions) and &lt;em&gt;it was working fine&lt;/em&gt;. Until it stopped working.&lt;/p&gt;
&lt;p&gt;I kept getting this error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;--- Last few GCs ---&amp;gt;

[168:0x5ba0970]   105925 ms: Mark-sweep (reduce) 2046.6 (2050.9) -&amp;gt; 2045.7 (2050.9) MB, 588.4 / 0.0 ms  (average mu = 0.053, current mu = 0.021) allocation failure scavenge might not succeed

[0-0] 
&amp;lt;--- JS stacktrace ---&amp;gt;

[0-0] FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
[0-0]  1: 0xa3ac30 node::Abort() [/usr/local/bin/node]
[0-0]  2: 0x98a45d node::FatalError(char const*, char const*) [/usr/local/bin/node]
[0-0]  3: 0xbae25e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]
[0-0]  4: 0xbae5d7 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]
[0-0]  5: 0xd56125  [/usr/local/bin/node]
[0-0]  6: 0xd56acb v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [/usr/local/bin/node]
[0-0]  7: 0xd6481c v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [/usr/local/bin/node]
[0-0]  8: 0xd65684 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/bin/node]
[0-0]  9: 0xd680fc v8::internal::Heap::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/usr/local/bin/node]
[0-0] 10: 0xd2f3aa v8::internal::Factory::AllocateRaw(int, v8::internal::AllocationType, v8::internal::AllocationAlignment) [/usr/local/bin/node]
[0-0] 11: 0xd29254 v8::internal::FactoryBase&amp;lt;v8::internal::Factory&amp;gt;::AllocateRawWithImmortalMap(int, v8::internal::AllocationType, v8::internal::Map, v8::internal::AllocationAlignment) [/usr/local/bin/node]
[0-0] 12: 0xd2a789 v8::internal::FactoryBase&amp;lt;v8::internal::Factory&amp;gt;::NewStruct(v8::internal::InstanceType, v8::internal::AllocationType) [/usr/local/bin/node]
[0-0] 13: 0xd36be6 v8::internal::Factory::NewStackTraceFrame(v8::internal::Handle&amp;lt;v8::internal::FrameArray&amp;gt;, int) [/usr/local/bin/node]
[0-0] 14: 0xc28a98  [/usr/local/bin/node]
[0-0] 15: 0xc2fb66 v8::internal::Builtin_CallSitePrototypeToString(int, unsigned long*, v8::internal::Isolate*) [/usr/local/bin/node]
[0-0] 16: 0x13f5159  [/usr/local/bin/node]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What was &lt;strong&gt;weird&lt;/strong&gt; is that the tests all passed!&lt;/p&gt;
&lt;p&gt;It did not &lt;a href="https://gregtyler.co.uk/blog/fatal-error-allocation-failed-error-with-webdriverio-and-cucumber"&gt;turn out to be a Selenium Grid issue&lt;/a&gt;, as I wasn't using that but it turned out to be another simple fix (i.e. nothing to do with memory size).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I was missing the &lt;code&gt;&amp;#64;wdio/sync&lt;/code&gt; package from my package dependencies after I split out my e2e tests into a separate folder.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once I added &lt;code&gt;&amp;#64;wdio/sync&lt;/code&gt; back, things worked.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-diff"&gt;&amp;quot;dependencies&amp;quot;: {
  &amp;quot;&amp;#64;wdio/cli&amp;quot;: &amp;quot;6.1.24&amp;quot;,
  &amp;quot;&amp;#64;wdio/local-runner&amp;quot;: &amp;quot;6.1.24&amp;quot;,
  &amp;quot;&amp;#64;wdio/mocha-framework&amp;quot;: &amp;quot;6.1.19&amp;quot;,
  &amp;quot;&amp;#64;wdio/spec-reporter&amp;quot;: &amp;quot;6.1.23&amp;quot;,
+ &amp;quot;&amp;#64;wdio/sync&amp;quot;: &amp;quot;6.1.14&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The telltale sign was that the tests were taking 1 minute when before I checked the logs and the tests used to run in 4 seconds. &lt;strong&gt;Ding, ding, ding!&lt;/strong&gt; It must not wait properly for the commands without the sync package and uses up more and more memory.&lt;/p&gt;
&lt;p&gt;Hope this helps anyone in a similar situation!&lt;/p&gt;
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbLTExMDM0NTY0MzksLTE3NDQ5MTgxMDJdfQ
==
--&gt;
</content>
		<summary>&lt;p&gt;Throughout &lt;a href="https://bit.ly/KamranOnPluralsight"&gt;working on a course&lt;/a&gt; you usually run into bugs and issues that throw you for a loop for awhile. In this case, it was doubly frustrating because I had previously set up &lt;a href="https://webdriver.io"&gt;webdriverio&lt;/a&gt; to run in my continuous integration environment (GitHub Actions) and &lt;em&gt;it was working fine&lt;/em&gt;. Until it stopped working.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-07-17-cypress-browser-permissions" />
		<link rel="enclosure" type="image" href="https://kamranicus.com/563819/87799786-42456780-c813-11ea-9e84-9a4ff71b72c8.png" />
		<id>https://kamranicus.com/posts/2020-07-17-cypress-browser-permissions</id>
		<title>Controlling Browser Permissions in Cypress End-to-End Tests</title>
		<updated>2020-07-17T02:00:00Z</updated>
		<content>&lt;p&gt;I am excited to release a new open source package &lt;a href="https://npmjs.com/package/cypress-browser-permissions"&gt;cypress-browser-permissions&lt;/a&gt;. 🎉 You can view it on GitHub at &lt;a href="https://github.com/kamranayub/cypress-browser-permissions"&gt;kamranayub/cypress-browser-permissions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This package solves a real need when testing more sophisticated applications when using &lt;a href="https://cypress.io"&gt;Cypress&lt;/a&gt;, the end-to-end testing framework. It helps control the permission level of various browser features such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Desktop Notifications&lt;/li&gt;
&lt;li&gt;Geolocation&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Camera&lt;/li&gt;
&lt;li&gt;Microphone&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/87500464-2169f000-c622-11ea-8dbb-a480a6f137ac.png" class="img-fluid" alt="image" /&gt;&lt;/p&gt;
&lt;h2 id="how-to-use-it"&gt;How to Use It&lt;/h2&gt;
&lt;p&gt;To get started, you'll need to install the package and you'll need Cypress installed already.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i cypress cypress-browser-permissions --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this is your first time installing Cypress, you'll need to run it once to generate a project structure:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;npx cypress open
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, you need to initialize the plugin to hook it into Cypress' plugin pipeline. In &lt;code&gt;cypress/plugins/index.js&lt;/code&gt;, modify it as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-diff"&gt;+ const { cypressBrowserPermissionsPlugin } = require('cypress-browser-permissions')

/**
 * &amp;#64;type {Cypress.PluginConfig}
 */
module.exports = (on, config) =&amp;gt; {
  // `on` is used to hook into various events Cypress emits
  // `config` is the resolved Cypress config
+ config = cypressBrowserPermissionsPlugin(on, config);
+ return config;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you will have the ability to control various permissions for Chrome, Edge, and Firefox using &lt;a href="https://docs.cypress.io/guides/guides/environment-variables.html"&gt;Cypress environment variables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example, if you want to just set permissions for your project you can do so in &lt;code&gt;cypress.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-json"&gt;{
  &amp;quot;env&amp;quot;: {
    &amp;quot;browserPermissions&amp;quot;: {
      &amp;quot;notifications&amp;quot;: &amp;quot;allow&amp;quot;,
      &amp;quot;geolocation&amp;quot;: &amp;quot;allow&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The plugin will read the permission settings and apply them when launching the browser. It will also reset between launches since modifying the browser profile is persisted across sessions.&lt;/p&gt;
&lt;p&gt;You can read more about &lt;a href="https://github.com/kamranayub/cypress-browser-permissions"&gt;supported permissions and values in the README&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="writing-an-end-to-end-notification-test"&gt;Writing an End-to-End Notification Test&lt;/h3&gt;
&lt;p&gt;So let's try it out! Once I finish my &lt;strong&gt;Testing Progressive Web Apps&lt;/strong&gt; &lt;a href="http://bit.ly/KamranOnPluralsight"&gt;Pluralsight course&lt;/a&gt;, it will come with an open source sample app. In the meantime, we can write a basic test to see if permissions are working. This same test is included in the repo.&lt;/p&gt;
&lt;p&gt;First, we have an HTML file that uses &lt;code&gt;window.Notification&lt;/code&gt; to display a desktop notification:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cypress/html/notification.html&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Cypress Notification Test&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        const n = new window.Notification('test', { body: 'This is a test!' })
        n.addEventListener('show', (e) =&amp;gt; {
            window.__CypressNotificationShown = e;
        })
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can learn more about how the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/notification"&gt;Notification API&lt;/a&gt; works but what we are doing is immediately triggering a notification. Once the browser shows the toast, it triggers the &lt;code&gt;show&lt;/code&gt; event on the &lt;code&gt;Notification&lt;/code&gt; instance. Since Cypress is awesome and we can hook directly into the &lt;code&gt;window&lt;/code&gt; object, we set a callback value globally that we can then inspect/wait for in our test.&lt;/p&gt;
&lt;p&gt;If you have a blank Cypress project you do not even need a server as Cypress will automatically host the root of the project when there is no other configuration.&lt;/p&gt;
&lt;p&gt;Save the &lt;code&gt;notification.html&lt;/code&gt; file under &lt;code&gt;cypress/html&lt;/code&gt; and then we can visit that page in the test.&lt;/p&gt;
&lt;p&gt;We can create a test suite in &lt;code&gt;cypress/integration&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cypress/integration/notification.test.js&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;import { isPermissionAllowed } from 'cypress-browser-permissions';

describe(&amp;quot;notifications&amp;quot;, () =&amp;gt; {
    it(&amp;quot;should be enabled&amp;quot;, () =&amp;gt; {
        expect(isPermissionAllowed(&amp;quot;notifications&amp;quot;)).to.be.true;
    })

    // Only test notification showing in &amp;quot;headed&amp;quot; browsers, which also
    // works in CI :tada:
    Cypress.browser.isHeaded &amp;amp;&amp;amp; it(&amp;quot;should display desktop notification&amp;quot;, () =&amp;gt; {
    
        // Visit the page we created previously
        cy.visit('/cypress/html/notification.html')
        
        // Wait for the window callback to populate with the event data
        cy.window().its('__CypressNotificationShown').should('exist');
    })
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can run our tests:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;npx cypress open
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's all! If &lt;code&gt;browserPermissions.notifications&lt;/code&gt; is set to &lt;code&gt;allow&lt;/code&gt; then our test should pass:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/87737665-3620c200-c7a1-11ea-8429-73bd40c99bed.png" class="img-fluid" alt="test run" /&gt;&lt;/p&gt;
&lt;p&gt;And a notification will be shown!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/87737706-52bcfa00-c7a1-11ea-893e-9f6f8dec1e2e.png" class="img-fluid" alt="toast" /&gt;&lt;/p&gt;
&lt;h3 id="how-it-works"&gt;How It Works&lt;/h3&gt;
&lt;p&gt;In Cypress, &lt;a href="https://docs.cypress.io/api/plugins/browser-launch-api.html#Modify-browser-launch-arguments-preferences-and-extensions"&gt;you have control over the launch preferences for browsers&lt;/a&gt;, so the magic lies in &lt;em&gt;what preferences to pass to each browser.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This topic is not heavily documented &lt;a href="https://github.com/cypress-io/cypress/issues/2671"&gt;as evidenced by this open issue in the Cypress repo&lt;/a&gt; I came across while researching this. It has been open since 2018 with no one mentioning the ability to control launch preferences.&lt;/p&gt;
&lt;p&gt;Thanks to BrowserStack for &lt;a href="https://www.browserstack.com/automate/handle-popups-alerts-prompts-in-automated-tests"&gt;documenting some of these permissions&lt;/a&gt; as well as these StackOverflow posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/55435198/selenium-python-allow-firefox-notifications"&gt;Selenium + Python Allow Firefox Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/48007699/how-to-allow-or-deny-notification-geo-location-microphone-camera-pop-up"&gt;How to allow or deny notification geo-location microphone camera pop up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was able to piece together the information needed to tackle this with a Cypress plugin. Since each browser family uses different preferences, I thought it would be best to abstract it.&lt;/p&gt;
&lt;h3 id="whats-next"&gt;What's Next?&lt;/h3&gt;
&lt;p&gt;My hope is that this package is &lt;em&gt;actually short-lived&lt;/em&gt; and the Cypress team can incorporate these permission settings into the core of the product, since it's such an important feature especially when testing new, modern APIs.&lt;/p&gt;
&lt;p&gt;There will be a &lt;strong&gt;full sample&lt;/strong&gt; of using Cypress with this plugin (as well as other black magicks such as bypassing service workers and more!) in my &lt;em&gt;Testing Progressive Web Apps&lt;/em&gt; course soon on &lt;a href="https://bit.ly/KamranOnPluralsight"&gt;Pluralsight&lt;/a&gt;. It should be released in August, you can follow me there to get notified when it releases. The sample app will be open source on GitHub so you'll be able to reference it 👍&lt;/p&gt;
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbLTQ2ODg5MTg5NCwyMTA1MzEzMTc4LDEzNj
M1NTM4NTldfQ==
--&gt;
</content>
		<summary>&lt;p&gt;I am excited to release a new open source package &lt;a href="https://npmjs.com/package/cypress-browser-permissions"&gt;cypress-browser-permissions&lt;/a&gt;. 🎉 You can view it on GitHub at &lt;a href="https://github.com/kamranayub/cypress-browser-permissions"&gt;kamranayub/cypress-browser-permissions&lt;/a&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-05-21-storybook-for-game-engines" />
		<id>https://kamranicus.com/posts/2020-05-21-storybook-for-game-engines</id>
		<title>Storyflow: Using Storybook to Build a Better... Game Engine?</title>
		<updated>2020-05-26T13:30:00Z</updated>
		<content>&lt;p&gt;Do you use &lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt;? Do you use it to test game engines? Didn't think so! But we do for &lt;a href="https://excaliburjs.com"&gt;Excalibur.js&lt;/a&gt; and I presented how and why we did it. The genesis for the talk came from a workflow I've been using recently that you can implement in your own projects which I call &amp;quot;Storyflow.&amp;quot;&lt;/p&gt;
&lt;h3 id="watch-the-talk"&gt;Watch the Talk&lt;/h3&gt;
&lt;p&gt;I gave this talk at MN Dev Con on May 4 and again at React Minneapolis on May 21:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/biSFvQmMJsc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id="what-is-storyflow"&gt;What is Storyflow?&lt;/h3&gt;
&lt;p&gt;The Storybook workflow (ahem, &lt;em&gt;Storyflow&lt;/em&gt;) we follow puts Storybook stories at the center of our workflow. The concept is simple in practice: write your unit and functional tests &lt;em&gt;against Storybook&lt;/em&gt; instead of importing directly from component files like other workflows.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/2020-05-21-storyflow.png" class="img-fluid" alt="Storyflow: write tests against Storybook" /&gt;&lt;/p&gt;
&lt;p&gt;The &amp;quot;normal&amp;quot; component-based workflow goes like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write my component in &lt;code&gt;MyComponent.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Write my unit test, &lt;code&gt;MyComponent.test.js&lt;/code&gt; and import &lt;code&gt;MyComponent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Write a functional test, against my running app, which may test one aspect of &lt;code&gt;MyComponent&lt;/code&gt; in use or maybe a few different behaviors/states&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But with &lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt; the workflow instead flips the script and centers your testing on isolated components through stories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write my component in &lt;code&gt;MyComponent.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Write my Storybook story &lt;code&gt;DefaultState&lt;/code&gt; in &lt;code&gt;MyComponent.stories.js&lt;/code&gt; and import &lt;code&gt;MyComponent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Write my unit test, &lt;code&gt;MyComponent.test.js&lt;/code&gt; &lt;strong&gt;and import &lt;code&gt;DefaultState&lt;/code&gt; from stories&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write a functional test against &lt;code&gt;DefaultState&lt;/code&gt; story in Storybook&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's comes down to a &lt;em&gt;slight&lt;/em&gt; shift in thinking. Without Storybook, normally you'd be putting your component into different states &lt;em&gt;within&lt;/em&gt; your unit tests. &lt;em&gt;With&lt;/em&gt; Storybook, you're already showcasing your component in different states, which makes your unit tests a lot trimmer. Finally, you can add UI testing on top of it to ensure your component works in the browser (without having to manually verify in Storybook).&lt;/p&gt;
&lt;p&gt;There are 3 major benefits we've seen from this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;One source of truth for all our tests (stories)&lt;/li&gt;
&lt;li&gt;Incentivizes writing more stories&lt;/li&gt;
&lt;li&gt;Promotes more testability&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="one-source-of-truth"&gt;One source of truth&lt;/h3&gt;
&lt;p&gt;Since your unit and functional tests are run against stories, Storybook becomes the source of truth for any tests. Contrast that to developing without stories, where each test could render components in different states and the only way to know would be to examine each test. Having a published Storybook as a static site makes things a lot more discoverable.&lt;/p&gt;
&lt;h3 id="incentivizes-writing-more-stories"&gt;Incentivizes writing more stories&lt;/h3&gt;
&lt;p&gt;Since tests are written &lt;em&gt;against&lt;/em&gt; stories, in order to write more tests... you'll need to write more stories. Having more stories means better documentation (even if it's just code!).&lt;/p&gt;
&lt;h3 id="promotes-more-testability"&gt;Promotes more testability&lt;/h3&gt;
&lt;p&gt;In order to write a solid Storybook story, it has to run in isolation. That means that you will likely lift up more heavy concerns like data fetching, state management, and other stuff higher and have more atomic reusable components. We actually still write stories against our &amp;quot;container&amp;quot; components but it requires a lot more mocking using &lt;a href="https://storybook.js.org/docs/basics/writing-stories/#decorators"&gt;Storybook decorators&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;If you're curious to see this in action, I have a &lt;a href="https://github.com/kamranayub/example-storyflow"&gt;GitHub repository&lt;/a&gt; set up you can clone and run and I showcase this workflow within the video above.&lt;/p&gt;
&lt;p&gt;You can view a working demo on CodeSandbox using the repository!&lt;/p&gt;
&lt;iframe
     src="https://codesandbox.io/embed/github/kamranayub/example-storyflow/tree/master/?fontsize=14&amp;hidenavigation=1&amp;module=%2Fsrc%2FLoginForm.stories.js&amp;theme=dark"
     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"
     title="storybook-testing-example"
     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts allow-autoplay"
   &gt;&lt;/iframe&gt;
&lt;p&gt;Let me know in the comments if you've used this workflow and how it's been working for you!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Do you use &lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt;? Do you use it to test game engines? Didn't think so! But we do for &lt;a href="https://excaliburjs.com"&gt;Excalibur.js&lt;/a&gt; and I presented how and why we did it. The genesis for the talk came from a workflow I've been using recently that you can implement in your own projects which I call "Storyflow."&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-05-26-ravendb-indexing-mongodb-postgresql" />
		<id>https://kamranicus.com/posts/2020-05-26-ravendb-indexing-mongodb-postgresql</id>
		<title>Role of Indexing in RavenDB vs. MongoDB and PostgreSQL</title>
		<updated>2020-05-25T15:00:00Z</updated>
		<content>&lt;p&gt;I recently was engaged to write an article on how RavenDB indexing compares to MongoDB and PostgreSQL. I had a lot of fun writing it because I finally got to dive deeper into how MongoDB and PostgreSQL query engines work under the covers. I was actually surprised to be honest, I thought that MongoDB was more similar to RavenDB but it ended up being quite different.&lt;/p&gt;
&lt;p&gt;Read more about &lt;a href="https://ravendb.net/articles/nosql-document-database-indexing"&gt;the role indexing plays in RavenDB vs. MongoDB and PostgreSQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If this interests you be sure to check out my &lt;a href="http://bit.ly/PSRavenDB4"&gt;Getting Started with RavenDB 4&lt;/a&gt; course on Pluralsight.&lt;/p&gt;
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbMTk4Nzc5OTgyM119
--&gt;
</content>
		<summary>&lt;p&gt;I recently was engaged to write an article on how RavenDB indexing compares to MongoDB and PostgreSQL. I had a lot of fun writing it because I finally got to dive deeper into how MongoDB and PostgreSQL query engines work under the covers. I was actually surprised to be honest, I thought that MongoDB was more similar to RavenDB but it ended up being quite different.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-03-06-frontend-masters-react-native" />
		<id>https://kamranicus.com/posts/2020-03-06-frontend-masters-react-native</id>
		<title>Frontend Masters Workshop: React Native Recap</title>
		<updated>2020-03-07T02:20:00Z</updated>
		<content>&lt;p&gt;Today I attended the local Frontend Masters &lt;a href="https://frontendmasters.com/workshops/react-native-v2/"&gt;in-person workshop&lt;/a&gt; for React Native by &lt;a href="https://twitter.com/kadikraman"&gt;Kadi Kraman&lt;/a&gt;. First, I have to point out her last name is my first name with a couple letters swapped. Too funny. Next, it was great! 🎉 I had a lot of fun.&lt;/p&gt;
&lt;p&gt;I've &lt;a href="https://github.com/kamranayub/sample-react-native-workshop-expo-ts"&gt;posted my lab repository&lt;/a&gt; on GitHub for anyone else to peruse, notably I followed along in TypeScript as a way to better explore the APIs and see how the TypeScript experience was.&lt;/p&gt;
&lt;h3 id="the-workshop"&gt;The workshop&lt;/h3&gt;
&lt;p&gt;Kadi works at Formidable Labs as an engineer and she specializes in React Native applications. Her workshop was focused on getting started with React Native and we built a &amp;quot;color theme&amp;quot; app that allows you to view color schemes and add a new one. Since I use React daily, it definitely felt familiar but Kadi went over a lot of the foundational concepts just in case attendees weren't as familiar.&lt;/p&gt;
&lt;h3 id="what-i-took-away"&gt;What I took away&lt;/h3&gt;
&lt;p&gt;Using React day-to-day I feel like I know it pretty well but I had never sat down to actually look into React Native. What I appreciate about workshops like this is the ability to take dedicated time and go end-to-end with something, with an instructor who knows their subject and can help you not waste time.&lt;/p&gt;
&lt;p&gt;As far as the &lt;em&gt;motivation&lt;/em&gt; to learn it, first, I'm always interested in learning new things. I'm a lifelong learner. But second, I was interested in comparing it to my experience building native Windows Phone apps &lt;a href="https://kamranicus.com/projects"&gt;back in the day&lt;/a&gt; as well as some passing familiarity with &lt;a href="https://ionicframework.com/"&gt;Ionic&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/apps/xamarin"&gt;Xamarin&lt;/a&gt; and &lt;a href="https://cordova.apache.org/"&gt;Cordova&lt;/a&gt; apps.&lt;/p&gt;
&lt;p&gt;I was &lt;em&gt;very impressed&lt;/em&gt; by how quick it was to run an app using the Expo CLI. I had the app running on my phone within a few minutes. That's awesome! Installing traditional React Native was definitely more of a chore, even when I had Xcode installed previously.&lt;/p&gt;
&lt;p&gt;The workshop covered a lot of topics, enough to build out simple applications and I especially liked the familiar &lt;code&gt;fetch&lt;/code&gt; examples without having to bring in complicated dependencies. In other words, coding in React Native was very familiar for a traditional React developer. I felt like the workshop taught me enough where I could fumble around and build out the app more without feeling like I was overwhelmed.&lt;/p&gt;
&lt;p&gt;I think I would attend an Advanced React Native workshop in the future because of course my mind went to all sorts of questions that were beyond the scope of what time we had:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How do you change the UI in response to the running platform? e.g. show the &amp;quot;Floating Action Button&amp;quot; in Android vs. a button in iOS&lt;/li&gt;
&lt;li&gt;How hard &lt;em&gt;is it&lt;/em&gt; to add a native module?&lt;/li&gt;
&lt;li&gt;How do you handle device storage? That was a huge pain for me in Windows Phone (multithreading + I/O, ugh).&lt;/li&gt;
&lt;li&gt;How do you write tests? React Native Testing Library and Detox were mentioned but we didn't have time to cover them&lt;/li&gt;
&lt;li&gt;How do you bring in a design system that can work well cross-platform? I was glad she mentioned &lt;code&gt;styled-components&lt;/code&gt; is supported and I also see &lt;a href="https://github.com/callstack/react-native-paper"&gt;Paper&lt;/a&gt; seems well-established.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So Marc, if you're reading this, invite Kadi again next year for some Advanced React Native 😎&lt;/p&gt;
&lt;h3 id="any-improvements-or-feedback"&gt;Any improvements or feedback?&lt;/h3&gt;
&lt;p&gt;I appreciated Kadi's attention to realism -- she did go ahead and run through the installation steps as a new developer would and there &lt;em&gt;were&lt;/em&gt; roadblocks she ran into that she showed how to resolve. At the same time, it &lt;em&gt;would&lt;/em&gt; have been nice to get to testing in a one-day workshop and the installation process took time away from other subjects so it's a balancing act there. I could see this being a two-day workshop in the future, to cover animations, testing, storage, and deployment on day two.&lt;/p&gt;
&lt;p&gt;The exercises were just right I think -- they were helpful in reinforcing what we learned and were at just the right spots. I enjoyed the stretch goals!&lt;/p&gt;
&lt;p&gt;I love the trend of instructors providing a full workshop site (the &lt;a href="https://www.learnpython.dev/"&gt;Python Fundamentals workshop&lt;/a&gt; was also like this) and I actually really liked how Kadi simply presented from the site itself versus slides. It meant we could follow along, read ahead, or work at our own pace if we needed to without missing anything. Everything was in one place. It was easy to copy code samples and click links for further reading. Her pace was perfect when going through the demos. It was at the right level for someone with previous React experience but I could see by the hook section where it could lose folks who haven't done a lot of hooks-based development. There were a lot of questions pertaining to hook semantics that came up! I can relate since even I get tripped up by them.&lt;/p&gt;
&lt;h3 id="would-i-use-react-native"&gt;Would I use React Native?&lt;/h3&gt;
&lt;p&gt;I was keenly interested in what it might look like to build a React Native app for &lt;a href="https://keeptrackofmygames.com"&gt;Keep Track of My Games&lt;/a&gt; and after taking the workshop, I feel more confident it could work out well. I can't say I'm 100% on board yet though since it's still true that when you need to get down to the nitty-gritty, you might be writing Objective-C/Swift or Java/Kotlin and &lt;em&gt;that's&lt;/em&gt; what sends shivers down my back. I love learning! &lt;em&gt;But I also have limited time!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The biggest question going into the workshop was, &lt;strong&gt;how much could I try to share between my React web code and React Native code&lt;/strong&gt;? I think the answer is, not much, unless I changed my web code to use something like &lt;a href="https://github.com/necolas/react-native-web"&gt;React Native for Web&lt;/a&gt;. What I &lt;em&gt;could&lt;/em&gt; share are logic modules though but you couldn't share 3rd party React modules unless they &lt;em&gt;also&lt;/em&gt; targeted React Native.&lt;/p&gt;
&lt;p&gt;One thing to consider about Xamarin in particular is that when using &lt;a href="https://docs.microsoft.com/en-us/xamarin/xamarin-forms/"&gt;Xamarin.Forms&lt;/a&gt; it's C# and .NET up and down &lt;em&gt;the entire stack including the UI&lt;/em&gt;. In talking with my friend who has done a lot of Xamarin development you don't get to ignore XCode or Android Studio but at the same time you don't need to go and learn 2-4 languages to write native modules.&lt;/p&gt;
&lt;p&gt;At the end of the day, it'll probably come down to how complicated I think the KTOMG app would get (I'd say, not that complicated...). I think overall the fact is &lt;em&gt;building native mobile apps is hard&lt;/em&gt;. Overall the React Native developer experience felt really productive to build out this app. That's an important factor for me, with limited time to spend wrestling with cross-platform tooling.&lt;/p&gt;
&lt;p&gt;The closest parallel I can draw for mobile development was my experience building my Gatsby-based &lt;a href="https://reachfi.app"&gt;savings tracker app&lt;/a&gt;. Since that is a Progressive Web App (PWA) using traditional React and Material UI, I &lt;em&gt;loved&lt;/em&gt; the experience. I had a fully-working app in a weekend. But the &lt;a href="https://www.simicart.com/blog/pwa-app-stores/"&gt;deployment of PWAs to app stores&lt;/a&gt; is still in a sub-optimal state. Honestly, I hope to rewrite the KTOMG frontend to be a PWA anyway and maybe by the time I do that, PWAs will be first-class citizens on mobile platforms and my decision will be made for me. Always bet on the web... right?&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Today I attended the local Frontend Masters &lt;a href="https://frontendmasters.com/workshops/react-native-v2/"&gt;in-person workshop&lt;/a&gt; for React Native by &lt;a href="https://twitter.com/kadikraman"&gt;Kadi Kraman&lt;/a&gt;. First, I have to point out her last name is my first name with a couple letters swapped. Too funny. Next, it was great! 🎉 I had a lot of fun.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-03-05-throttling-outgoing-requests-nodejs-dotnet-core" />
		<id>https://kamranicus.com/posts/2020-03-05-throttling-outgoing-requests-nodejs-dotnet-core</id>
		<title>Throttling Outgoing Requests in Node.js and .NET Core</title>
		<updated>2020-03-05T14:00:00Z</updated>
		<content>&lt;p&gt;I have published two articles recently on a problem I was running into working on &lt;a href="https://keeptrackofmygames.com"&gt;Keep Track of My Games&lt;/a&gt;. In order to sync user's Steam collections, I have to call the &lt;a href="https://developer.valvesoftware.com/wiki/Steam_Web_API"&gt;Steam Web API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Steam Web API implements &amp;quot;rate limiting&amp;quot; meaning that if you call it too many times too quickly it returns a &lt;code&gt;HTTP 429 Too Many Requests&lt;/code&gt; response. According to &lt;a href="https://steamcommunity.com/dev/apiterms"&gt;the terms&lt;/a&gt; the rate limit is 100,000 requests per day, which is pretty generous. But if you're thinking of syncing 2000 users every 15 minutes, that puts you &lt;strong&gt;two times&lt;/strong&gt; over the limit! So you need a throttling mechanism to defer processing once you reach the limit. In most scenarios like this, public APIs will return some useful HTTP headers that let you know what your current request count is but in this case, the Steam API does no such thing (it's a bit dated).&lt;/p&gt;
&lt;p&gt;There are a few ways to rate limit or &lt;em&gt;throttle&lt;/em&gt; outgoing requests to an API like this but most approaches don't work with &lt;strong&gt;clustering&lt;/strong&gt; meaning multiple isolated clients. Approaches like using &lt;a href="https://codeburst.io/throttling-concurrent-outgoing-http-requests-in-net-core-404b5acd987b"&gt;slim semaphore&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/limiter"&gt;limiter&lt;/a&gt; don't cut it because those only work &lt;strong&gt;in-memory&lt;/strong&gt;. We need a backing store to coordinate counting requests across a cluster. &lt;a href="https://npmjs.com/package/bottleneck"&gt;Bottleneck&lt;/a&gt; is one npm package that supports this but it can only use Redis. Since I don't use Redis (and I'm using C#) that wasn't an option for me. Instead I turned to RavenDB for the solution and it's been working out well!&lt;/p&gt;
&lt;p&gt;I wrote up two guides on achieving this using RavenDB, &lt;a href="https://www.codeproject.com/Articles/5260137/Throttling-Outgoing-HTTP-Requests-in-a-Distributed"&gt;one for .NET&lt;/a&gt; and &lt;a href="https://www.codeproject.com/Articles/5260913/Throttling-Outgoing-Requests-in-Node-js"&gt;one for Node.js&lt;/a&gt;, so if you're curious how I solved the problem then check them out!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I have published two articles recently on a problem I was running into working on &lt;a href="https://keeptrackofmygames.com"&gt;Keep Track of My Games&lt;/a&gt;. In order to sync user's Steam collections, I have to call the &lt;a href="https://developer.valvesoftware.com/wiki/Steam_Web_API"&gt;Steam Web API&lt;/a&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-03-04-azure-devops-remote-command-failure" />
		<id>https://kamranicus.com/posts/2020-03-04-azure-devops-remote-command-failure</id>
		<title>Catching Errors with External Commands in PowerShell and Azure DevOps</title>
		<updated>2020-03-05T01:00:00Z</updated>
		<content>&lt;p&gt;Here's a quick tip for a problem I ran into within my Azure DevOps pipeline. I have a job task that executes a PowerShell script (Inline) and that script invokes a &lt;code&gt;git push&lt;/code&gt; command to an Azure Kudu Git endpoint that deploys my site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push -u kudu HEAD:$env:GITBRANCH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have multiple stages in my pipeline where &lt;code&gt;GITBRANCH&lt;/code&gt; environment variable gets set to &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;, etc. depending on the target environment I'm deploying to.&lt;/p&gt;
&lt;p&gt;The Git command will print this kind of output within the task log:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;remote: Updating branch 'master'.
remote: Updating submodules.
remote: Preparing deployment for commit id 'xxx'.
remote: Running custom deployment command...
remote: Running deployment command...
remote: Handling .NET Web Application deployment.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem becomes that even when the remote build &lt;strong&gt;fails&lt;/strong&gt;, the &lt;code&gt;git push&lt;/code&gt; command technically executes successfully with exit code 0 so PowerShell's &lt;code&gt;$LASTEXITCODE&lt;/code&gt; check doesn't fail.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##[debug]$LASTEXITCODE: 0
##[debug]Exit code: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the command executed successfully, Azure does not fail the pipeline and I don't get notified when my builds actually fail.&lt;/p&gt;
&lt;p&gt;To fix this, we need to somehow capture the output (but still preserve the logs) and check for a specific error string in the output to manually fail the pipeline.&lt;/p&gt;
&lt;p&gt;We're looking for a log message like this in the output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;remote: An error has occurred during web site deployment.
remote:
remote: Error - Changes committed to remote repository but deployment to website failed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the string &lt;code&gt;An error has occurred during web site deployment&lt;/code&gt; is present in the command output, we can fail the build.&lt;/p&gt;
&lt;p&gt;So in our PowerShell script, we can take advantage of a neat cmdlet called &lt;a href="tee-object"&gt;Tee-Object&lt;/a&gt; which I had never heard of, inspired by &lt;a href="so-capture-output"&gt;this StackOverflow answer&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;cmd /c &amp;quot;git push&amp;quot; '2&amp;gt;&amp;amp;1' | Tee-Object -Variable pushOutput

if ($null -ne ($pushOutput | ? { $_ -match 'An error has occurred during web site deployment' })) {
  Write-Error 'Build failed'
} else {
  Write-Verbose 'Build succeeded'
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What &lt;code&gt;Tee-Object&lt;/code&gt; does is redirect output to &lt;em&gt;two places&lt;/em&gt; (like a T, get it? 🐺) so we get our output both logged &lt;em&gt;and&lt;/em&gt; stored in a variable (a PowerShell string array).&lt;/p&gt;
&lt;p&gt;What we can then do is operate against our variable &lt;code&gt;$pushOutput&lt;/code&gt; and match any lines that contain our target string. If there's a match, it will &lt;em&gt;not equal&lt;/em&gt; &lt;code&gt;$null&lt;/code&gt; so the condition will pass and we can write an error.&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&lt;strong&gt;⚠ HUGE ISSUE ALERT:&lt;/strong&gt; Normally you would not need to include the &lt;code&gt;cmd /c&lt;/code&gt; and &lt;code&gt;'2&amp;gt;&amp;amp;1'&lt;/code&gt; portions of the script to execute the &lt;code&gt;git push&lt;/code&gt; but because life is unfair, you can actually run into &lt;a href="gh-tee-object-issue"&gt;a specific edge case&lt;/a&gt; with git commands where &lt;code&gt;Tee-Object&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; create a variable when all the output directed to it is stderr output (which is unintuitively the case with a &lt;code&gt;git push&lt;/code&gt; to Azure Kudu). It took me several hours of trial and error with different commands to stumble upon &lt;a href="so-tee-not-working"&gt;this StackOverflow answer&lt;/a&gt; that mentioned the edge case. By using &lt;code&gt;cmd /c&lt;/code&gt; and then utilizing its redirection with &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; it turns it &lt;a href="so-capture-output"&gt;all into stderr into stdout&lt;/a&gt; for PowerShell's consumption.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This will properly fail the Azure pipeline now if our remote build fails, hurray! 🤩&lt;/p&gt;
&lt;p&gt;Hopefully this helps the one person running into the same issues I did!&lt;/p&gt;
&lt;h3 id="links"&gt;Links&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/tee-object"&gt;Microsoft Docs: PowerShell - Tee-Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/47523222/tee-object-variable-not-sending-to-stdout"&gt;StackOverflow: Tee-Object variable not sending to stdout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/35980675/109458"&gt;StackOverflow: How do I capture the output into a variable from an external process in PowerShell?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PowerShell/PowerShell/issues/5560"&gt;GitHub PowerShell/PowerShell Issue #5560: Tee-Object should clear the -Variable target variable if no success-stream input is received&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		<summary>&lt;p&gt;Here's a quick tip for a problem I ran into within my Azure DevOps pipeline. I have a job task that executes a PowerShell script (Inline) and that script invokes a &lt;code&gt;git push&lt;/code&gt; command to an Azure Kudu Git endpoint that deploys my site:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-01-04-migrating-to-solid-state-ssds" />
		<id>https://kamranicus.com/posts/2020-01-04-migrating-to-solid-state-ssds</id>
		<title>Migrating from disk drives to solid state drives</title>
		<updated>2020-01-05T01:00:00Z</updated>
		<content>&lt;p&gt;If you measure the age of tech in dog years, my PC is old. 👴 It's a Frankenstein's monster, with some parts being relatively new like my Radeon R9 390 and other parts originally from my initial 2012 build. My hard drives were one of those OG parts. I had already upgraded my primary drive to be a 250GB SSD which helped but these days 250GB is not a lot (but &lt;a href="https://www.computerworld.com/article/2534312/the--640k--quote-won-t-go-away----but-did-gates-really-say-it-.html"&gt;it ought to be&lt;/a&gt;). I also was running with 16GB of RAM and when recording courses or browsing a single fucking website in Chrome, my PC decided that it was too old for that shit and I was constantly in disk paging hell since my pagefile was too big for the SSD and was stored on a spinning disk.&lt;/p&gt;
&lt;p&gt;This made me feel like grabbing my computer by its britches and lobbing it straight through my basement window so that any wayward frogs could hop joyfully on its carcass. Instead I spent some money. First, I installed 32GB of RAM. That helped. Then I was able to exorcise my 3 spinning disk drives and replaced them with 3 SSDs total, without re-imaging or re-installing anything. That can seem intimidating if you don't know the steps so I wanted to share how I successfully accomplished the feat.&lt;/p&gt;
&lt;h2 id="picking-out-the-drives"&gt;Picking out the drives&lt;/h2&gt;
&lt;p&gt;At my local &lt;a href="https://microcenter.com"&gt;Micro Center&lt;/a&gt; I picked out two &lt;a href="https://amzn.to/39EnZxD"&gt;Samsung 860 EVO SSDs 1TB&lt;/a&gt; drives that were each on clearance for about $200 total.&lt;/p&gt;
&lt;p&gt;I figured 2TB + 250GB of SSD ought to be enough for my PC since I mainly do development now and some limited gaming. I need enough for about 5-8 AAA games and a dozen or so smaller games plus some storage for my media server. In the worst case I can stick the extra disks in a NAS.&lt;/p&gt;
&lt;p&gt;One key thing to understand if you're looking at SSDs in 2020 and beyond is support for &lt;a href="https://www.pcworld.com/article/2899351/everything-you-need-to-know-about-nvme.html"&gt;NVMe&lt;/a&gt;. It's the latest storage tech for SSDs that provides the fastest possible speed. Unfortunately, being my rig is an old dog, I cannot teach it new tricks. Until next time, Fido. 🐶&lt;/p&gt;
&lt;h2 id="going-from-multiple-spinning-disks"&gt;Going from multiple spinning disks&lt;/h2&gt;
&lt;p&gt;This is what I had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Old Disk 0: 250GB SSD (Primary OS)&lt;/li&gt;
&lt;li&gt;Old Disk 1: 1TB HDD (Development Work)&lt;/li&gt;
&lt;li&gt;Old Disk 2: 750GB HDD (Games/Media)&lt;/li&gt;
&lt;li&gt;Old Disk 3: 750GB HDD (Games/Media)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These disks had varied amounts of free space but in total I think I had about 700GB free between all of them. The primary drive was 95% or so full, enough that I couldn't get back more space.&lt;/p&gt;
&lt;p&gt;I wanted to move to this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New Disk 0: 1TB SSD (OS / Development)&lt;/li&gt;
&lt;li&gt;New Disk 1: 1TB SSD (Storage / Games)&lt;/li&gt;
&lt;li&gt;New Disk 3: 250GB SSD (Storage / Games)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't think I &lt;em&gt;really&lt;/em&gt; need the extra 250GB but 🤷‍♂️.&lt;/p&gt;
&lt;h2 id="playing-musical-chairs-files"&gt;Playing Musical &lt;del&gt;Chairs&lt;/del&gt; Files&lt;/h2&gt;
&lt;p&gt;Do you notice something about the desired end state above? It's actually &lt;strong&gt;500GB less space&lt;/strong&gt; than what I had before. I'm becoming a minimalist in my old age.&lt;/p&gt;
&lt;p&gt;What this meant in practice was that I needed to move files around in order to properly clone the HDDs over to the new SSDs and then &lt;em&gt;even after that&lt;/em&gt;, I had to move files manually over from the HDDs.&lt;/p&gt;
&lt;p&gt;The general idea was to move files over drive-by-drive to empty some less-used drives so I could disconnect them, then use some software to clone the migrated files from the old HDDs over to the new SSDs.&lt;/p&gt;
&lt;p&gt;Step-by-step here's what I did at a high level:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identify the drive with the most storage space (e.g. &lt;strong&gt;Old Disk 1&lt;/strong&gt; in my case)&lt;/li&gt;
&lt;li&gt;Copy over all &amp;quot;loose&amp;quot; files from other drives over to &lt;strong&gt;Old Disk 1&lt;/strong&gt;, things like music, code, videos, etc. In my case, this left &lt;strong&gt;Old Disk 2&lt;/strong&gt; empty as there was nothing really installed there.&lt;/li&gt;
&lt;li&gt;Format &lt;strong&gt;Old Disk 2&lt;/strong&gt; in Windows 10 completely so we can disconnect it (see &lt;a href="https://www.easeus.com/partition-master/format-hard-drive-in-windows-10.html"&gt;3 ways to format a disk in Windows 10&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Open up the PC, disconnect HDD &lt;strong&gt;Old Disk 2&lt;/strong&gt;, connect SSD &lt;strong&gt;New Disk 1&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Boot up with &lt;a href="https://clonezilla.org/clonezilla-live.php"&gt;Clonezilla Live USB&lt;/a&gt; drive plugged in&lt;/li&gt;
&lt;li&gt;Clone device-to-device &lt;strong&gt;Old Disk 1&lt;/strong&gt; to &lt;strong&gt;New Disk 1&lt;/strong&gt; (see &lt;a href="https://clonezilla.org/show-live-doc-content.php?topic=clonezilla-live/doc/03_Disk_to_disk_clone"&gt;how to clone small disk to larger disk&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Old Disk 1&lt;/strong&gt; can now be formatted or disconnected!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Repeat the same steps for the remaining drives, leaving the OS drive to the last. I wanted to be sure my cloning process is working. After booting up in Windows 10, I'd verify the new drive worked and then shutdown to disconnect the old drive.&lt;/p&gt;
&lt;h2 id="moving-program-or-game-installation-folders"&gt;Moving program or game installation folders&lt;/h2&gt;
&lt;p&gt;Copying loose files is easy -- music, TV, videos, movies, backups, etc. But moving &lt;em&gt;installations&lt;/em&gt; of programs is a bit more work what with Windows Registry settings, etc. I had to reconfigure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.office.com/en-us/article/change-the-location-of-your-onedrive-folder-f386fb81-1461-40a7-be2c-712676b2c4ae"&gt;One Drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtogeek.com/257472/how-to-painlessly-move-your-steam-library-to-another-folder-or-hard-drive/"&gt;Steam Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.windowscentral.com/how-install-apps-separate-drive-windows-10"&gt;Windows Games&lt;/a&gt; (installed via Xbox Game Pass)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.howtogeek.com/404999/how-to-move-fortnite-to-another-folder-drive-or-pc/"&gt;Epic Games&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I followed the linked guides above to do it all, it took &lt;em&gt;forever&lt;/em&gt; to wait and wait for all the copying to finish but it did work.&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Note: I ran into an issue trying to move some games like Master Chief Collection. I got an error 0x80073d0b and &lt;a href="https://answers.microsoft.com/en-us/windows/forum/apps_windows_10-winapps/windows-10-getting-error-0x80073d0b-when-moving/f42ecd3c-f386-4967-8df7-4887bd2f45e4?page=1&amp;amp;auth=1"&gt;tried to follow some threads&lt;/a&gt; on the problem but ended up simply uninstalling the games to re-download later. What luxury. 🤵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have other programs like Adobe Creative Cloud and such, be sure to move the installation location (carefully).&lt;/p&gt;
&lt;h2 id="extending-the-partitions-to-non-adjacent-unallocated-space"&gt;Extending the partitions to non-adjacent unallocated space&lt;/h2&gt;
&lt;p&gt;When you use &lt;a href="https://clonezilla.org/clonezilla-live.php"&gt;Clonezilla&lt;/a&gt; device-to-device cloning, it clones the full MBR and partition records. This means, my 250GB SSD had 2 partitions (the main one, 249.5GB and a 500MB recovery partition) and when it was cloned to a &lt;strong&gt;1 TB drive&lt;/strong&gt; there was 700GB (ish) of unallocated space.&lt;/p&gt;
&lt;p&gt;These partitions are shown in Disk Management in Windows 10. Normally, you can &lt;a href="https://www.partitionwizard.com/resizepartition/how-to-merge-unallocated-spaces.html"&gt;extend a partition into the next unallocated space&lt;/a&gt;. However, because the first partition of 249.5GB &lt;em&gt;was not adjacent to the unallocated 700GB block&lt;/em&gt; I had to use a special free tool called &lt;a href="https://www.partitionwizard.com/resizepartition/how-to-merge-unallocated-spaces.html"&gt;MiniTool Partition Wizard&lt;/a&gt; to &amp;quot;extend&amp;quot; the first partition to use the unallocated space because Disk Management in Windows 10 doesn't allow you to do that.&lt;/p&gt;
&lt;p&gt;That was 10 minutes I didn't expect to spend but luckily Partition Wizard came to the rescue. 🤗&lt;/p&gt;
&lt;h2 id="cleaning-up-the-last-hard-drive"&gt;Cleaning up the last hard drive&lt;/h2&gt;
&lt;p&gt;I had &lt;strong&gt;Old Disk 2&lt;/strong&gt; last to clean up; so I had to move more files around because &lt;strong&gt;New Disk 0&lt;/strong&gt; had a lot more free space (750GB worth). I copied stuff from &lt;strong&gt;New Disk 1&lt;/strong&gt; and &lt;strong&gt;Old Disk 2&lt;/strong&gt; so I could finally format and erase &lt;strong&gt;Old Disk 2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Once I finished wiping the last HDD, I disconnected it and reconnected &lt;strong&gt;Old Disk 0&lt;/strong&gt; which I then wiped in Windows and created &lt;a href="https://www.partitionwizard.com/help/create-partition.html"&gt;a new logical volume&lt;/a&gt;. Again, I had to use Partition Wizard because Windows 10 &lt;em&gt;would not delete the recovery partition&lt;/em&gt; (for good reason because it didn't realize I one-upped it and migrated to a new better, faster, stronger drive).&lt;/p&gt;
&lt;h2 id="the-final-state"&gt;The final state&lt;/h2&gt;
&lt;p&gt;&lt;img src="images/2020-01-04-ssds.png" class="img-fluid" alt="my new hard drives" /&gt;&lt;/p&gt;
&lt;p&gt;After all was said and done, I reached the desired final state! Whew. It took about 4 days since I had to wait for a lot of copying to finish but it was worth it, my PC is &lt;em&gt;screaming&lt;/em&gt; fast now.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;If you measure the age of tech in dog years, my PC is old. 👴 It's a Frankenstein's monster, with some parts being relatively new like my Radeon R9 390 and other parts originally from my initial 2012 build. My hard drives were one of those OG parts. I had already upgraded my primary drive to be a 250GB SSD which helped but these days 250GB is not a lot (but &lt;a href="https://www.computerworld.com/article/2534312/the--640k--quote-won-t-go-away----but-did-gates-really-say-it-.html"&gt;it ought to be&lt;/a&gt;). I also was running with 16GB of RAM and when recording courses or browsing a single fucking website in Chrome, my PC decided that it was too old for that shit and I was constantly in disk paging hell since my pagefile was too big for the SSD and was stored on a spinning disk.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2020-01-01-year-in-review-2020-goals" />
		<id>https://kamranicus.com/posts/2020-01-01-year-in-review-2020-goals</id>
		<title>2019 Year and Decade in Review plus 2020 Goals</title>
		<updated>2020-01-01T05:08:00Z</updated>
		<content>&lt;p&gt;That was fast. &lt;a href="https://kamranicus.com/posts/2019-07-12-quarterly-2-update"&gt;Last I checked in with you&lt;/a&gt;, half the year had already passed. Then I planned to do a third quarter update and suddenly it was the end of the year. I even have a draft of the third quarter newsletter and now I'm just rolling it into the year-end newsletter.&lt;/p&gt;
&lt;h2 id="its-been-quite-a-decade"&gt;It's been quite a decade&lt;/h2&gt;
&lt;p&gt;An entire decade is concluding and Twitter is a-fire with decade-in-review posts.&lt;/p&gt;
&lt;p&gt;I am going to keep this quick, let's go over what happened since 2010!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🎓 I graduated from business school with a degree in MIS and a minor in Entrepreneurship.&lt;/li&gt;
&lt;li&gt;💑 I married my wife, Cassie and 👶 we had two kids, Rami and Saira!&lt;/li&gt;
&lt;li&gt;🏠 We bought a house.&lt;/li&gt;
&lt;li&gt;✈ We took &lt;a href="https://kamranicus.com/posts/2015-05-21-5-things-for-6-months-abroad"&gt;a 6-month sabbatical&lt;/a&gt; in 2015 and lived in Europe. In the decade we &lt;a href="/travel"&gt;traveled&lt;/a&gt; around North America and Europe, visiting various US states, Montreal, Hawaii, Iceland, Britain, Ireland, Norway, the Netherlands, Morocco, France, and Italy.&lt;/li&gt;
&lt;li&gt;🏢 I started full-time as an Application Developer at General Mills and am starting 2020 as a Lead Engineer at Target.&lt;/li&gt;
&lt;li&gt;🌎 I started &lt;a href="https://keeptrackofmygames.com"&gt;Keep Track of My Games&lt;/a&gt; and started a new blog, &lt;a href="https://looksgoodtous.com"&gt;Looks Good to Us&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;👨‍🏫 I became an educator and released &lt;a href="/training"&gt;5 video courses&lt;/a&gt;, including &lt;a href="https://kamranicus.com/posts/2017-10-10-becoming-a-pluralsight-author"&gt;becoming a Pluralsight author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🎤 I was a public speaker and spoke &lt;a href="/events"&gt;at over 20+ community events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🎮 I helped develop and create &lt;a href="/projects"&gt;5 games&lt;/a&gt; and &lt;a href="https://keeptrackofmygames.com/users/kamranicus/lists/played"&gt;played many others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📱 I released &lt;a href="/projects"&gt;3 mobile apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💰 We achieved a 40%+ &lt;a href="https://www.mrmoneymustache.com/2012/01/13/the-shockingly-simple-math-behind-early-retirement/"&gt;savings rate&lt;/a&gt; after discovering the idea and community of &lt;a href="https://www.choosefi.com/welcome-to-financial-independence/"&gt;financial independence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🚗 We owned the same cars, a Corolla and Elantra, the entire decade. 😋&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Holy Shit.&lt;/strong&gt; I did a ton of stuff. I have a LOT to be proud of and thankful for. 🙏 The next decade will hopefully be even more rewarding for me and my family.&lt;/p&gt;
&lt;h2 id="goals-in-review"&gt;2019 Goals in Review&lt;/h2&gt;
&lt;p&gt;Again let's start with a review of what I set out to do in 2019, as of &lt;a href="https://kamranicus.com/posts/2019-07-12-quarterly-2-update"&gt;my last update&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="primary-goals"&gt;Primary Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ Publish 1 Pluralsight course on Azure or TypeScript or React &lt;del&gt;by September&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;I just published &lt;a href="tbd"&gt;Contributing to an Open Source Project on GitHub&lt;/a&gt; right before the new year!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;a href="/guides"&gt;Publish 4 Pluralsight guides&lt;/a&gt; on React &amp;amp; TypeScript by May&lt;/li&gt;
&lt;li&gt;✅ &lt;a href="https://www.youtube.com/watch?v=mIejhIX7ObE"&gt;Speak at NDC MN&lt;/a&gt; on a TypeScript topic&lt;/li&gt;
&lt;li&gt;⛔ Publish 5 technical articles on the blog about Azure, TypeScript, or React
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2 out of 5&lt;/em&gt; ain't bad! Check out &lt;a href="https://kamranicus.com/posts/2019-06-26-typescript-safe-destructuring-patterns"&gt;safe destructuring in TypeScript&lt;/a&gt; and &lt;a href="https://kamranicus.com/posts/2019-09-12-using-storybook-in-a-monorepo"&gt;using Storybook in a monorepo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Personal&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⛔ Pay off all non-mortgage debt
&lt;ul&gt;
&lt;li&gt;We paid off most of it except Cassie's school loan, which will be gone by November 2020, if not sooner. Instead of paying it all off, we are saving for a car purchase (in cash) for March/April.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ Passive income should account for 2% of earnings, 1099 income for 5%
&lt;ul&gt;
&lt;li&gt;Passive income as a % of W-2: &lt;strong&gt;2.08%&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;1099 income as a % of W-2: &lt;strong&gt;2.89%&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Total side earnings:&lt;/strong&gt; 4.97%!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Total % of annual expenses:&lt;/strong&gt; 8%!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ Replace my PCs at home with a single good Ultrabook/Notebook &lt;del&gt;and a NAS&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;As of yesterday, I completed upgrading my PC to SSDs-only and 32GB of RAM&lt;/li&gt;
&lt;li&gt;I also bought a used Lenovo Yoga 720 laptop earlier in the year which I love&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Push 3 substantive updates to KTOMG throughout the year: Steam review revamp, Raven 4 upgrade, and Linux hosting
&lt;ul&gt;
&lt;li&gt;I completed 2 major updates: RavenDB 4 upgrade and IGDB migration. I am partially done with the 3rd update.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ &lt;del&gt;Learn how to cut trim/baseboard and&lt;/del&gt; finish the nursery
&lt;ul&gt;
&lt;li&gt;Let's leave this at just paint since I decided to leave the trim.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stretch-goals"&gt;Stretch Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ Set up a &lt;a href="https://kamranicus.com/newsletter"&gt;quarterly newsletter&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;But I need to actually send it out &lt;em&gt;every&lt;/em&gt; quarter 😅&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Publish 1 more Pluralsight course on Azure or TypeScript or React&lt;/li&gt;
&lt;li&gt;⛔ Publish 4 additional Pluralsight guides throughout the year&lt;/li&gt;
&lt;li&gt;⛔ Participate in 1 Pluralsight Mentoring session&lt;/li&gt;
&lt;li&gt;⛔ Become a Microsoft MVP with a focus on Azure/TypeScript content&lt;/li&gt;
&lt;li&gt;⛔ Speak at a JSConf or ReactConf event
&lt;ul&gt;
&lt;li&gt;No luck but I &lt;a href="https://kamranicus.com/posts/2019-10-08-mdc-2019-flexible-ui-architecture-react-graphql"&gt;did speak at MDC 2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Speak at the React MN meetup about TypeScript or GraphQL
&lt;ul&gt;
&lt;li&gt;I did speak at the .NET User Group on RavenDB, though!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Record a YouTube video walkthrough of my &lt;a href="https://kamranicus.com/guides/raspberry-pi-3-baby-monitor"&gt;Raspberry Pi baby monitor&lt;/a&gt; written guide
&lt;ul&gt;
&lt;li&gt;I put out a feeler video instead, to see if there was any interest.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Personal&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⛔ 1099 income should account for 12% or more (+2% over 2018) of W-2 income
&lt;ul&gt;
&lt;li&gt;Again, this wasn't my focus for 2019 and probably won't be for 2020 either. I'll readjust my goals accordingly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Travel completely free somewhere in the US with wife and 2 kids using miles/points
&lt;ul&gt;
&lt;li&gt;This summer we did a trip up to Voyageur National Park with friends and rented a cabin&lt;/li&gt;
&lt;li&gt;This goal will be for Summer 2020 and 2021, as we are gearing up for a &lt;strong&gt;huge&lt;/strong&gt; trip in 2021, more info later!&lt;/li&gt;
&lt;li&gt;We did earn 80,000 travel rewards points though, which will go towards those trips&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Participate in Ludum Dare during the spring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⛔ &lt;del&gt;Install luxury vinyl plank in my office&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;⛔ &lt;del&gt;Replace baseboard/trim in my son's bedroom&lt;/del&gt; Paint son's bedroom trim.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="unplanned-accomplishments"&gt;Unplanned Accomplishments&lt;/h3&gt;
&lt;p&gt;I like including this because it goes to show you can't predict everything for the year!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🏆 Wrote &lt;a href="https://kamranicus.com/posts/2019-04-04-ravendb-data-modeling-with-indexes"&gt;freelance technical articles&lt;/a&gt; for RavenDB&lt;/li&gt;
&lt;li&gt;🏆 Started &lt;a href="https://kamranicus.com/posts/2019-09-10-looks-good-to-us-blog-launch"&gt;a new blog&lt;/a&gt; with Cassie&lt;/li&gt;
&lt;li&gt;🏆 Wrote &lt;a href="https://reachfi.app"&gt;a small app&lt;/a&gt; for tracking my savings rate&lt;/li&gt;
&lt;li&gt;🏆 Reached a savings rate of &lt;strong&gt;40%&lt;/strong&gt;, more than double last year's. I still can't believe we were able to accomplish that, it's huge!&lt;/li&gt;
&lt;li&gt;🏆 Started a new role at work and was promoted&lt;/li&gt;
&lt;li&gt;🏆 Learned a ton about &lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt; and how to use it &lt;a href="https://kamranicus.com/posts/2019-09-12-using-storybook-in-a-monorepo"&gt;on large projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="reflection"&gt;Reflection&lt;/h2&gt;
&lt;p&gt;Wow, I had a great 2019! There are quite a few partial or incomplete goals up there but all the important things were hit: new course, lots of writing, shoring up personal finances, in addition to some unplanned accomplishments like our new craft blog.&lt;/p&gt;
&lt;h2 id="lets-go-2020"&gt;Let's Go 2020&lt;/h2&gt;
&lt;p&gt;I feel like each year this list gets smaller and smaller -- which is good, I think. I would like to stay focused on what's important and will move the ball forward.&lt;/p&gt;
&lt;p&gt;By the way I should just mention that I haven't truly shared &lt;em&gt;the why&lt;/em&gt; behind these goals. I have a why but I am keeping that close to my chest. Just know I have 5-, 10-, 15-, and 20-year goals in mind when I write these and all these goals work towards those larger ones. You have to have &lt;a href="https://www.ted.com/talks/simon_sinek_how_great_leaders_inspire_action?language=en"&gt;the why&lt;/a&gt; nailed down to work towards, otherwise your goals exist in isolation.&lt;/p&gt;
&lt;h3 id="content"&gt;Content&lt;/h3&gt;
&lt;p&gt;I want to continue doing paid and free content creation in 2020. I feel like one course is a good goal to balance everything else but two would be great.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;👨‍🏫 Publish 1 Pluralsight course, &lt;strong&gt;Stretch:&lt;/strong&gt; 2 courses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have a couple paid opportunities to write and so I'd like to do at least two more. Tangential to that, I am tired of the friction of static site + Git + Markdown and would like to leverage &lt;a href="https://ghost.org"&gt;Ghost&lt;/a&gt; since I've been really happy with it for the &lt;a href="https://looksgoodtous.com"&gt;LGTU&lt;/a&gt; blog.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✍ Write 2 articles on React, TypeScript, RavenDB, or Azure&lt;/li&gt;
&lt;li&gt;✍ Write 4 freelance articles&lt;/li&gt;
&lt;li&gt;👻 Migrate to Ghost for this blog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I enjoy speaking but I don't intend for it to take over my life. Doing one or two large conferences a year is enough for me! I would still &lt;em&gt;love&lt;/em&gt; to get a chance to speak outside Minnesota, so I've applied to KCDC, NEJS, and React NYC.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🎤 Speak at NDC MN and one other regional conference, &lt;strong&gt;Stretch:&lt;/strong&gt; Speak outside MN.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="financial"&gt;Financial&lt;/h3&gt;
&lt;p&gt;Now that I finished two major migrations for KTOMG, I want to work on getting my first paying user. To do that will require some more infrastructure work but I feel confident I can make it happen in 2020! I'm also feeling the friction of a heavy web front-end stack so I'd like to simplify it a bit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📈 Get &lt;a href="http://ktomg.com"&gt;Keep Track of My Games&lt;/a&gt; to make a profit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Right now LGTU doesn't cost us much, about $15 per month. I'd like to earn at least that much in affiliate revenue for 2020.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📈 Get &lt;a href="https://looksgoodtous.com"&gt;Looks Good to Us&lt;/a&gt; to make a profit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I modified the financial goals from last year to take a different perspective. Rather than measuring side income in terms of W-2 income, I'm comparing it against our annual expenses which is much more under our control. In 2019, it covered 8% of our expenses which is &lt;strong&gt;awesome.&lt;/strong&gt; We also maintained a respectable 40% savings rate (see also &lt;a href="https://esimoney.com/the-gap-is-the-key-to-wealth/"&gt;The Gap&lt;/a&gt;) and I want to maintain that momentum going into 2020. It will actually be tougher since we have to buy a new (used) vehicle.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;💰 Passive and 1099 income should cover 10% of our annual expenses&lt;/li&gt;
&lt;li&gt;💵 Maintain a 40% annual savings rate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I activated &lt;a href="https://github.com/sponsors/kamranayub"&gt;my GitHub sponsor profile&lt;/a&gt;. If you want to support me directly, that's a way to do it. I am not sure what to expect from this but I'll be &lt;em&gt;pleasantly&lt;/em&gt; surprised if I get at least one sponsor in 2020.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🙏 Have one sponsor on GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="diy"&gt;DIY&lt;/h3&gt;
&lt;p&gt;I still feel like I'm in the &amp;quot;learning&amp;quot; phase of DIY but I am starting to get comfortable knowing what I want to do around the house. I have one specific project in mind I'm very motivated to do and it would teach me everything about framing and drywall in a small, controlled space. I'd like to build a closet around the sump pump in our basement family room (which is otherwise just exposed in plain sight 😑).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🛠 Finish the last egress window cover&lt;/li&gt;
&lt;li&gt;🛠 Finish one basement-related project&lt;/li&gt;
&lt;li&gt;🛠 &lt;strong&gt;Stretch&lt;/strong&gt;: Finish an upstairs home project&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="looking-forward"&gt;Looking forward&lt;/h2&gt;
&lt;p&gt;I am pretty excited about what 2020 holds and how it will get me closer to my overall goals in life and family. Each year seems to be even better than the last and I hope the trend continues. I'm sure some of these goals won't be achieved in total but even making progress against them is a huge win.&lt;/p&gt;
&lt;p&gt;What are your goals for 2020? Do you have any specific things you want to get done?&lt;/p&gt;
</content>
		<summary>&lt;p&gt;That was fast. &lt;a href="https://kamranicus.com/posts/2019-07-12-quarterly-2-update"&gt;Last I checked in with you&lt;/a&gt;, half the year had already passed. Then I planned to do a third quarter update and suddenly it was the end of the year. I even have a draft of the third quarter newsletter and now I'm just rolling it into the year-end newsletter.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-12-31-pluralsight-contributing-to-open-source" />
		<id>https://kamranicus.com/posts/2019-12-31-pluralsight-contributing-to-open-source</id>
		<title>Just Finished Contributing to an Open Source Project on GitHub Course</title>
		<updated>2020-01-01T04:00:00Z</updated>
		<content>&lt;p&gt;Since mid-October I've been working on my newest Pluralsight course and I can finally announce it's here! ✨ The &lt;a href="http://bit.ly/PSContributingToOpenSource"&gt;Contributing to an Open Source Project on GitHub&lt;/a&gt; course will teach you how to be an effective open source contributor by showing you how to work with others and work through common scenarios you'd find in the real-world. It distills most of the foundational concepts I've used in practice contributing to open source (and inner source) over the years and it was a fun course to build!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/71635500-cd9a3b00-2bea-11ea-9729-a4b32d7a1284.png" class="img-fluid" alt="Course overview trailer screenshot" /&gt;&lt;/p&gt;
&lt;p&gt;It's designed for folks new to open source, who may never have contributed before but are interested in how to get started. I cover tips for opening pull requests, finding issues to work on, working with maintainers, and tons of scenarios you might run into while contributing code.&lt;/p&gt;
&lt;p&gt;If that sounds like something you're interested in, &lt;a href="http://bit.ly/PSContributingToOpenSource"&gt;check it out&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="the-build-process"&gt;The build process&lt;/h2&gt;
&lt;p&gt;I've &lt;a href="https://kamranicus.com/posts/2018-10-18-new-azure-pluralsight-courses"&gt;documented before&lt;/a&gt; how I track working on my courses and to that end nothing has changed. I use previous course Trello cards as a template for new ones. However, one thing that &lt;em&gt;may&lt;/em&gt; change in the future is switching to &lt;a href="http://notionhq.com"&gt;Notion&lt;/a&gt; instead which would allow me greater flexibility in organizing work.&lt;/p&gt;
&lt;h2 id="estimates-are-hard"&gt;Estimates are hard&lt;/h2&gt;
&lt;p&gt;Imagine my surprise when &lt;em&gt;halfway&lt;/em&gt; through the course, I blew through my course time budget:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/2019-12-course-time-exceeded.png" class="img-fluid" alt="Total time was double than what I thought" /&gt;&lt;/p&gt;
&lt;p&gt;By the end, I was double what I thought (pretty much &lt;em&gt;exactly&lt;/em&gt;). It just goes to show it's tough to estimate how long an individual course might take. Recall last time each Azure course was about 60 hours of work (for 120 total).&lt;/p&gt;
&lt;p&gt;What I think contributed to the overtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Complex demo flows.&lt;/strong&gt; I felt very strongly that I show how to work within an &lt;em&gt;actual&lt;/em&gt; GitHub repository and in order to do so, I had to make it public and create several test accounts. I had multiple browser windows open in order to do the recordings because I couldn't effectively set up everything beforehand as each demo built on top of one another.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lots of content.&lt;/strong&gt; The draft produced course was actually around 2h15m or so and I was able to edit it down to 1h45m for the final production. When I do content planning I script out all the demos, what to cover, etc. so the end result is more polished but it's hard to estimate how long each clip will be when you do that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Technical issues.&lt;/strong&gt; I upgraded to Camtasia 2019 and overall it was good except for the fact that it ran into some bugs like where I couldn't easily select a window to record, which meant each time I had to resize the window and recording outline manually to align properly. Furthermore, it seems like Camtasia chokes on anything more than 10 minutes long because it's just a bear when it starts getting long. Another author mentioned they do one Camtasia project per clip and I think that's what I'm going to do going forward. The UI lag was killing me.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am pretty pleased with the end result but that extra time was squeezed into about 4-5 weeks which was pretty intense on my schedule.&lt;/p&gt;
&lt;h2 id="final-thoughts"&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;I'm excited to release this course because it's much less of a technical how-to and more of a holistic best practice course. I focused a lot on communication techniques and peppered the course with tips and tricks I've used in real-life.&lt;/p&gt;
&lt;p&gt;I kept thinking of more things I could possibly do later for a second edition, for example I bet you could do an entire module on all the interpersonal topics related to open source. I actually didn't realize how comprehensive the Pluralsight catalog was already &lt;a href="https://pluralsight.pxf.io/6LdEG"&gt;covering communication skills&lt;/a&gt; so I'm glad I recommended those and I plan to go through them all myself.&lt;/p&gt;
&lt;p&gt;If contributing to open source seems interesting you and you haven't had a lot of experience, I hope you find the course useful!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Since mid-October I've been working on my newest Pluralsight course and I can finally announce it's here! ✨ The &lt;a href="http://bit.ly/PSContributingToOpenSource"&gt;Contributing to an Open Source Project on GitHub&lt;/a&gt; course will teach you how to be an effective open source contributor by showing you how to work with others and work through common scenarios you'd find in the real-world. It distills most of the foundational concepts I've used in practice contributing to open source (and inner source) over the years and it was a fun course to build!&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-10-08-mdc-2019-flexible-ui-architecture-react-graphql" />
		<id>https://kamranicus.com/posts/2019-10-08-mdc-2019-flexible-ui-architecture-react-graphql</id>
		<title>MDC 2019 Recording Live for Flexible UI Architecture with React and GraphQL</title>
		<updated>2019-10-09T03:00:00Z</updated>
		<content>&lt;p&gt;I had the opportunity to speak at &lt;a href="https://mdc.ilmservices.com"&gt;MDC 2019&lt;/a&gt; recently and recorded my talk &lt;a href="https://www.youtube.com/watch?v=dCawL3nAnUA&amp;amp;list=PLmmRwaXW1nVTi2uv1vpy9B7pvI0X-vMc4&amp;amp;index=7&amp;amp;t=0s"&gt;Designing a Flexible UI Architecture with React and GraphQL&lt;/a&gt;. I think it's even better than the version I gave &lt;a href="https://kamranicus.com/posts/2019-02-01-ndc-minnesota-flexible-ui-with-react-graphql-typescript"&gt;at NDC MN&lt;/a&gt; earlier this year.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dCawL3nAnUA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id="whats-the-talk-about"&gt;What's the talk about?&lt;/h2&gt;
&lt;p&gt;Here's the abstract:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If your application suffers from hard-to-debug UI state, complex client-side business rules, and has trouble scaling to meet your performance needs you might be tearing your hair out. In this session I will share how we shifted the way we thought about our application using a 3 step process from the ground up. I’ll show you how we built a declarative “schema-driven UI” engine built on React and GraphQL that could manage business complexity and still scale to meet future business requirements.&lt;/p&gt;
&lt;p&gt;I'll share our approach, some challenges we faced and advice for your own applications so you can design your own declarative schema-driven UI architecture that fits your business needs. Don’t fret if you don’t use React or GraphQL because this pattern can be introduced into any framework you might be using.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="what-did-people-say"&gt;What did people say?&lt;/h2&gt;
&lt;p&gt;Like I said, I thought this went even better than the one I gave at NDC (&lt;a href="https://www.youtube.com/watch?v=mIejhIX7ObE&amp;amp;list=PLmmRwaXW1nVTi2uv1vpy9B7pvI0X-vMc4&amp;amp;index=2"&gt;recording&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This last session was rated &lt;strong&gt;4.3/5&lt;/strong&gt; out of 25 ratings. 💖 Some specific feedback I got:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;so much content!!!&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;useful approach&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;very handy guide to UI design with any technology&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;🙏 I was very happy to read these! I even had to cut out content to fit within 50 minutes.&lt;/p&gt;
&lt;p&gt;I also had a couple people come up afterwards who said they thought the content was great and &amp;quot;impressive.&amp;quot; Great!&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;wish would of talked more generic graphQL and react to&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; this last comment was referring to maybe adding more introductory content around GraphQL/React. Totally fair but I think the case study and design methodology are the focal points and for an intermediate talk, I don't have enough time to introduce React much though I &lt;em&gt;do&lt;/em&gt; spend at least 5-8 minutes on why GraphQL was a good fit for this architecture.&lt;/p&gt;
&lt;h2 id="what-did-i-change"&gt;What did I change?&lt;/h2&gt;
&lt;p&gt;I made a few changes structurally to the presentation that I think made it even better this time around.&lt;/p&gt;
&lt;h3 id="wrote-a-script"&gt;Wrote a script&lt;/h3&gt;
&lt;p&gt;What! Actually this is something I've had to admit about myself. It's better if I write out my thoughts first to get them in order and be more articulate. I have time to mull it over and edit. I did this on my last two courses and it made a real difference in quality.&lt;/p&gt;
&lt;p&gt;Each of the slides now has full speaker notes and I practiced reading through it several times to get the flow and points straight that I wanted to make.&lt;/p&gt;
&lt;h3 id="cut-out-the-bio"&gt;Cut out the bio&lt;/h3&gt;
&lt;p&gt;I got rid of the &amp;quot;about me&amp;quot; section and replaced with a single slide at the end with resources. I basically launch into the talk and &lt;em&gt;then at the end&lt;/em&gt; when people have heard what I have to say, they can look me up. This was some advice I came across online from somewhere (maybe &lt;a href="https://dev.to/tlakomy/what-i-wished-someone-told-me-about-speaking-at-tech-conferences-3opp"&gt;this&lt;/a&gt; or &lt;a href="https://www.youtube.com/watch?v=AzVr_nsKoZs&amp;amp;feature=youtu.be"&gt;even this meta talk&lt;/a&gt;) that I implemented.&lt;/p&gt;
&lt;h3 id="start-with-the-point"&gt;Start with the point&lt;/h3&gt;
&lt;p&gt;My teacher in high school gave me this advice about speaking:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;Tell them what you want to tell them, tell them, then tell them what you told them.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I didn't know it until later but this advice actually originated from &lt;a href="https://www.inc.com/john-baldoni/deliver-a-great-speech-aristotle-three-tips.html"&gt;Aristotle&lt;/a&gt;. I am reading some books on rhetoric currently so that was neat to learn.&lt;/p&gt;
&lt;p&gt;Even though I &lt;em&gt;knew this&lt;/em&gt; intellectually it hit home more after we had an internal guest speaker at work, Frances Frei, talk about rebuilding trust. It was a lengthier version of her &lt;a href="https://www.youtube.com/watch?v=pVeq-0dIqpk"&gt;TED talk&lt;/a&gt; which I highly recommend.&lt;/p&gt;
&lt;p&gt;She says if you're having a hard time getting your point across, it may be because you take a long, winding road to get to your point. Instead, just &lt;em&gt;start with your point&lt;/em&gt; and people will be more engaged.&lt;/p&gt;
&lt;p&gt;So that's what I did, my second slide is the whole point of the presentation. Then I follow Aristotle's advice and summarize at the end.&lt;/p&gt;
&lt;h3 id="divide-into-3-parts"&gt;Divide into 3 parts&lt;/h3&gt;
&lt;p&gt;Everything is better in threes. I divided the talk into 3 main sections and I think that really helped keep the flow and structure solid in people's minds.&lt;/p&gt;
&lt;h2 id="what-would-i-change"&gt;What would I change?&lt;/h2&gt;
&lt;p&gt;Plenty. Each time I give a talk it surfaces more things I'd change.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'd like to do more with the Adobe XD design I made: animations, callouts, etc.&lt;/li&gt;
&lt;li&gt;I think I'll redo the GraphQL section next time.&lt;/li&gt;
&lt;li&gt;I want to add a &amp;quot;post-mortem&amp;quot; section again, I took it out due to time but I might be able to save on time other places.&lt;/li&gt;
&lt;li&gt;I would &lt;strong&gt;love&lt;/strong&gt; to show a minimal demo/sample using one of the libraries I mention.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I might have a chance to do these things, I've submitted the talk to several more conferences for 2020. Wish me luck!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I had the opportunity to speak at &lt;a href="https://mdc.ilmservices.com"&gt;MDC 2019&lt;/a&gt; recently and recorded my talk &lt;a href="https://www.youtube.com/watch?v=dCawL3nAnUA&amp;amp;list=PLmmRwaXW1nVTi2uv1vpy9B7pvI0X-vMc4&amp;amp;index=7&amp;amp;t=0s"&gt;Designing a Flexible UI Architecture with React and GraphQL&lt;/a&gt;. I think it's even better than the version I gave &lt;a href="https://kamranicus.com/posts/2019-02-01-ndc-minnesota-flexible-ui-with-react-graphql-typescript"&gt;at NDC MN&lt;/a&gt; earlier this year.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-09-12-using-storybook-in-a-monorepo" />
		<id>https://kamranicus.com/posts/2019-09-12-using-storybook-in-a-monorepo</id>
		<title>Using Storybook in a Monorepo</title>
		<updated>2019-09-17T12:00:00Z</updated>
		<content>&lt;p&gt;I'm currently working in a small monorepo and we have multiple packages set up for shared components, like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;packages/
  atoms/
  molecules/
  organisms/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each package has React components under a &lt;code&gt;src&lt;/code&gt; directory and since each directory &lt;em&gt;is&lt;/em&gt; a package, they also contain &lt;code&gt;node_modules&lt;/code&gt; (more on why that's important below).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;packages/
  atoms/
    node_modules/
    src/
      components/
        Hello.js
        Hello.stories.js
    package.json
  molecules/
  organisms/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is different than other posts I've seen that use a root &lt;code&gt;stories/&lt;/code&gt; directory -- that is not how we'd like to set up our repo, we'd prefer stories to live right next to the components they describe.&lt;/p&gt;
&lt;h2 id="setting-up-storybook"&gt;Setting Up Storybook&lt;/h2&gt;
&lt;p&gt;You can follow the same steps on the &lt;a href="https://storybook.js.org/docs/guides/guide-react/"&gt;getting started page&lt;/a&gt; for setting up Storybook in a monorepo.&lt;/p&gt;
&lt;p&gt;Once it's done, you should have a new folder at the root:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.storybook/
  config.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If not, make sure that gets created. We need to make some changes to &lt;code&gt;config.js&lt;/code&gt; to read stories within each package in the monorepo.&lt;/p&gt;
&lt;h2 id="configuring-storybook-for-a-monorepo"&gt;Configuring Storybook for a Monorepo&lt;/h2&gt;
&lt;p&gt;The key issue I ran into that prompted me to write about this is that we need to import stories using the &lt;a href="https://github.com/webpack/docs/wiki/context"&gt;Webpack context&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;require.context('../packages', true, /stories.jsx?$/);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This prompts Webpack to scan a &lt;code&gt;src&lt;/code&gt; directory for paths containing &lt;code&gt;stories.js&lt;/code&gt; or &lt;code&gt;stories.jsx&lt;/code&gt; anywhere in the string.&lt;/p&gt;
&lt;p&gt;Since Webpack &lt;em&gt;statically analyzes&lt;/em&gt; this code it means we &lt;strong&gt;cannot&lt;/strong&gt; dynamically read the file system and iterate through each package directory (I tried that 😔).&lt;/p&gt;
&lt;p&gt;There's another problem. Remember I mentioned each package directory has &lt;code&gt;node_modules&lt;/code&gt; and possibly other directories which means that the following paths will match the regular expression:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# some node modules (like Storybook itself) use Storybook
./atoms/node_modules/&amp;#64;storybook__react/src/stories/blah.stories.js

# code coverage reports, uses same paths!
./molecules/lcov-report/_html/src/components/Hello.stories.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And you can imagine more paths like that can match. Webpack will attempt to import these files into the bundle it generates but these will most likely cause build errors. That isn't what we want! We need to &lt;em&gt;exclude&lt;/em&gt; everything but the &lt;code&gt;src&lt;/code&gt; directory in a package when matching files.&lt;/p&gt;
&lt;p&gt;The solution, as it turns out is fairly straightforward, since we have a convention where each package has components within a &lt;code&gt;src&lt;/code&gt; directory, we really just need to match that inner &lt;code&gt;src&lt;/code&gt; after the package name, so we can write a regular expression like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;require.context('../packages', true, /^\.\/[^\/]+\/src\/.*stories\.jsx?$/);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's break it down:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^               # match beginning of path
\.\/            # the path will begin with a &amp;quot;./&amp;quot;, like ./atoms
[^\/]+          # get the first path segment (match characters up to first /)
\/src\/         # ensure we match under the `src` directory
.*              # match any character
stories\.jsx?   # match anything with &amp;quot;stories.js(x)&amp;quot; in it
$               # match end of string
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here's an example using my favorite regex tool &lt;a href="https://regexr.com"&gt;RegExr&lt;/a&gt; on which paths match and which don't:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/65041547-a4e08500-d91c-11e9-895d-7acaf4cc65a1.png" class="img-fluid" alt="regex example" /&gt;&lt;/p&gt;
&lt;p&gt;Handy!&lt;/p&gt;
&lt;h2 id="the-final-config"&gt;The Final Config&lt;/h2&gt;
&lt;p&gt;Here's our final &lt;code&gt;config.js&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;import { configure } from '&amp;#64;storybook/react';

function loadStories() {
  const req = require.context('../packages', true, /^\.\/[^\/]+\/src\/.*stories\.jsx?$/);
  req.keys().forEach(filename =&amp;gt; req(filename));
}

configure(loadStories, module);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hope this helps someone else and saves them the few hours I spent performing the correct rites to get this to work!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I'm currently working in a small monorepo and we have multiple packages set up for shared components, like this:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-09-10-looks-good-to-us-blog-launch" />
		<id>https://kamranicus.com/posts/2019-09-10-looks-good-to-us-blog-launch</id>
		<title>Just Launched: Looks Good to Us DIY and Crafting Blog</title>
		<updated>2019-09-10T14:10:00Z</updated>
		<content>&lt;p&gt;My wife and I just started a crafting and DIY blog, &lt;a href="https://looksgoodtous.com"&gt;Looks Good to Us&lt;/a&gt; last week. We have new posts every Wednesday and you can subscribe to get weekly updates. You can also follow us on &lt;a href="https://twitter.com/looksgoodtous"&gt;Twitter&lt;/a&gt; and &lt;a href="https://instagram.com/looksgoodtous"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="diy-sewing-and-knitting-oh-my"&gt;DIY, Sewing, and Knitting, Oh My!&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/64663997-49d9fa00-d413-11e9-9039-23478f94a39c.png" class="img-fluid" alt="LGTU logo" /&gt;&lt;/p&gt;
&lt;p&gt;While &lt;em&gt;this&lt;/em&gt; blog revolves around technology and personal topics, LGTU is focused on my and Cassie's shared hobby of crafts: I like home automation, DIY, and &amp;quot;Maker&amp;quot; activities, she likes knitting and sewing. She frankly does much more than I do, since I have like 5 hobbies and she mostly has just the two (good for her!). You can read about it in our &lt;a href="https://looksgoodtous.com/welcome"&gt;Welcome&lt;/a&gt; post.&lt;/p&gt;
&lt;p&gt;There are two things I focused on with how I launched this new blog. I &lt;strong&gt;optimized for time&lt;/strong&gt; and &lt;strong&gt;avoided yak shaving.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="optimize-for-time"&gt;Optimize for Time&lt;/h2&gt;
&lt;p&gt;First, I optimized for frictionless writing. I needed something &lt;em&gt;fast&lt;/em&gt; and &lt;em&gt;collaborative&lt;/em&gt; because my wife is not a developer and I wanted to remove any excuse &lt;em&gt;not&lt;/em&gt; to write. So I used &lt;a href="https://ghost.org"&gt;Ghost&lt;/a&gt; and self-hosted it on a &lt;a href="https://marketplace.digitalocean.com/apps/ghost"&gt;Digital Ocean 1-click droplet&lt;/a&gt; (if you use it, help me out and &lt;a href="https://m.do.co/c/1026c3c0c89b"&gt;use my referral link&lt;/a&gt;). Digital Ocean is awesome and the process only took an evening and we were up and running. More on that later!&lt;/p&gt;
&lt;p&gt;Ghost is amazing 🤩 It uses the same editor Medium does which my wife and I used when we wrote posts during &lt;a href="https://kamranicus.com/travel"&gt;our travels&lt;/a&gt;. I also love the seamless workflow for drafting, scheduling, and editing. It allows my wife and I to schedule out posts ahead of time, essentially self-imposing a deadline each week, as shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/563819/64664906-4b58f180-d416-11e9-974b-e98899fc93d3.png" class="img-fluid" alt="LGTU post pipeline" /&gt;&lt;/p&gt;
&lt;p&gt;Congratulations, you get a sneak peek! The workflow is great and really removes all the barriers to writing that my lizard brain requires.&lt;/p&gt;
&lt;h2 id="no-yak-shaving-allowed"&gt;No Yak Shaving Allowed&lt;/h2&gt;
&lt;p&gt;The second thing I did differently, I didn't &lt;a href="https://www.hanselman.com/blog/YakShavingDefinedIllGetThatDoneAsSoonAsIShaveThisYak.aspx"&gt;shave any yaks&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;Yak shaving is what you are doing when you're doing some stupid, fiddly little task that bears no obvious relationship to what you're supposed to be working on, but yet a chain of twelve causal relations links what you're doing to the original meta-task.&amp;quot; - Scott Hanselman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We developers are &lt;em&gt;great&lt;/em&gt; at yak shaving. I could have spent a month making a logo (I spent 30 mins), customizing the theme (I made one edit), and designing a CI/CD DevOps-y Git-integrated workflow (I just use Ghost). By the time the blog would have launched, it would be &lt;em&gt;perfect&lt;/em&gt; and also I would have wasted months (or years, if you shave a lot of yaks).&lt;/p&gt;
&lt;p&gt;It reminds me of a quote I recently heard on a podcast:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;If you aren't embarassed by your first version, you're launching too late.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I didn't sweat it. I talked to my wife and we came up with a rotating weekly cadence. We already have 4-5 weeks of content. At this rate, we could even think about switching to twice a week but frankly I want to just give us some breathing room in-between posts. The fact that each of us gets 2 weeks is perfect right now.&lt;/p&gt;
&lt;h2 id="be-consistent"&gt;Be consistent&lt;/h2&gt;
&lt;p&gt;The number one recommendation I keep hearing over and over from successful content creators is that &lt;strong&gt;consistency&lt;/strong&gt; is crucial to building an audience. Fostering a community is also incredibly important. I made sure that we can do both for LGTU by enabling comments and hooking up the blog subscription to &lt;a href="http://eepurl.com/gpjY_H"&gt;Mailchimp&lt;/a&gt; (my referral link again!), which is what I use for my own newsletter.&lt;/p&gt;
&lt;p&gt;I need to do better for &lt;em&gt;this&lt;/em&gt; blog and it's on my list for this next year. I wish I could do it in an evening but due to the way all my source is in Markdown, I'll need to convert my posts for Ghost (they have a JSON import, though). It'll be added to my goals, don't worry. 😉&lt;/p&gt;
</content>
		<summary>&lt;p&gt;My wife and I just started a crafting and DIY blog, &lt;a href="https://looksgoodtous.com"&gt;Looks Good to Us&lt;/a&gt; last week. We have new posts every Wednesday and you can subscribe to get weekly updates. You can also follow us on &lt;a href="https://twitter.com/looksgoodtous"&gt;Twitter&lt;/a&gt; and &lt;a href="https://instagram.com/looksgoodtous"&gt;Instagram&lt;/a&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-09-03-aspnetmvc5-asset-versioning-url-helper" />
		<id>https://kamranicus.com/posts/2019-09-03-aspnetmvc5-asset-versioning-url-helper</id>
		<title>Versioning Content URLs in ASP.NET MVC 5</title>
		<updated>2019-09-04T01:37:00Z</updated>
		<content>&lt;p&gt;I just published a new Nuget package, &lt;a href="https://www.nuget.org/packages/AspNet.Mvc.AssetVersioning"&gt;AspNet.Mvc.AssetVersioning&lt;/a&gt;. This package extends the MVC5 &lt;code&gt;&amp;#64;Url&lt;/code&gt; Razor helper with a new &lt;code&gt;VersionedContent&lt;/code&gt; method
which appends a Base64-encoded SHA256 hash to the end of the URL for cache-busting.&lt;/p&gt;
&lt;h2 id="versioning-in-asp.net-core"&gt;Versioning in ASP.NET Core&lt;/h2&gt;
&lt;p&gt;In ASP.NET Core, you can version URLs using the &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/built-in/image-tag-helper?view=aspnetcore-2.2#asp-append-version"&gt;&lt;code&gt;asp-append-version&lt;/code&gt; tag helper&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src=&amp;quot;~/scripts/foo.js&amp;quot; type=&amp;quot;text/javascript&amp;quot; asp-append-version=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which will output:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src=&amp;quot;/scripts/foo.js?v=hash&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="versioning-in-asp.net-mvc-5"&gt;Versioning in ASP.NET MVC 5&lt;/h2&gt;
&lt;p&gt;Since I have not yet migrated to ASP.NET Core for &lt;a href="https://ktomg.com"&gt;Keep Track of My Games&lt;/a&gt;, I needed the same functionality in order to remove some old libraries that are not available in .NET Core. Now you can achieve the same thing using my &lt;a href="https://www.nuget.org/packages/AspNet.Mvc.AssetVersioning"&gt;package&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;#64;using System.Web.Mvc.AssetVersioning;

&amp;lt;script src=&amp;quot;&amp;#64;Url.VersionedContent(&amp;quot;~/scripts/foo.js&amp;quot;)&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will output the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src=&amp;quot;/scripts/foo?base64-encoded-hash&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The helper will automatically cache hashes for files for the lifetime of the &lt;code&gt;HttpContext&lt;/code&gt;. So, basically, for the lifetime of the application pool. Restart the site/app pool to refresh the cache, which should happen on any new deployments.&lt;/p&gt;
&lt;p&gt;You can simplify the &lt;code&gt;&amp;#64;using&lt;/code&gt; statement usage by adding the namespace to the &lt;code&gt;/configuration/system.web.webPages.razor/pages/namespaces&lt;/code&gt; section in the &lt;code&gt;Views/web.config&lt;/code&gt; file, as outlined in the GitHub repo &lt;a href="https://github.com/kamranayub/aspnetmvc5-asset-versioning"&gt;README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope this helps someone else facing the same issue!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I just published a new Nuget package, &lt;a href="https://www.nuget.org/packages/AspNet.Mvc.AssetVersioning"&gt;AspNet.Mvc.AssetVersioning&lt;/a&gt;. This package extends the MVC5 &lt;code&gt;@Url&lt;/code&gt; Razor helper with a new &lt;code&gt;VersionedContent&lt;/code&gt; method
which appends a Base64-encoded SHA256 hash to the end of the URL for cache-busting.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-08-12-pluralsight-guide-testing-react-typescript-jest" />
		<id>https://kamranicus.com/posts/2019-08-12-pluralsight-guide-testing-react-typescript-jest</id>
		<title>New Pluralsight Guide: How to Test React Components in TypeScript</title>
		<updated>2019-08-13T03:27:00Z</updated>
		<content>&lt;p&gt;I just published my fourth Pluralsight guide: &lt;a href="https://pluralsight.pxf.io/7VVBV"&gt;How to Test React Components in TypeScript&lt;/a&gt;. I cover how to configure Jest with TypeScript and bootstrap React Testing Library.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I just published my fourth Pluralsight guide: &lt;a href="https://pluralsight.pxf.io/7VVBV"&gt;How to Test React Components in TypeScript&lt;/a&gt;. I cover how to configure Jest with TypeScript and bootstrap React Testing Library.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-07-12-quarterly-2-update" />
		<id>https://kamranicus.com/posts/2019-07-12-quarterly-2-update</id>
		<title>2019 Goals Quarterly Update (Q2)</title>
		<updated>2019-07-12T14:00:00Z</updated>
		<content>&lt;p&gt;OK, we have already reached Q2 2019! Right smack in the middle of summer. Not long ago, &lt;a href="https://kamranicus.com/posts/2019-04-28-quarterly-1-update"&gt;I posted my first quarterly update&lt;/a&gt; and promised to also send the first quarterly newsletter &lt;em&gt;this quarter&lt;/em&gt;. Well, &lt;a href="https://kamranicus.com/newsletter"&gt;if you've subscribed&lt;/a&gt; you should have a fresh email soon in your inbox which includes a ton of interesting links and some content that is &lt;em&gt;not&lt;/em&gt; included in this post (hey, I have to add value somehow!).&lt;/p&gt;
&lt;h2 id="progress-on-yearly-goals"&gt;Progress on yearly goals&lt;/h2&gt;
&lt;p&gt;Let's see what updates there have been to my goals. To make it easy, I've only included &lt;em&gt;new updates&lt;/em&gt;, so check out &lt;a href="https://kamranicus.com/posts/2019-04-28-quarterly-1-update"&gt;Q1 for a review&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="primary-goals"&gt;Primary Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ Publish 4 Pluralsight guides on React &amp;amp; TypeScript by May
&lt;ul&gt;
&lt;li&gt;I was just approved to write my 4th Pluralsight guide. Yes! It'll be out in August.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ Speak at NDC MN on a TypeScript topic
&lt;ul&gt;
&lt;li&gt;I spoke! You can &lt;a href="https://www.youtube.com/watch?v=mIejhIX7ObE"&gt;watch the recording on YouTube&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Publish 5 technical articles on the blog about Azure, TypeScript, or React
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;1 of 5 down.&lt;/em&gt; I recently wrote about &lt;a href="https://kamranicus.com/posts/2019-06-26-typescript-safe-destructuring-patterns"&gt;Handling Safe Destructuring in TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Personal&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;☑️ Passive income should account for 2% of earnings, 1099 income for 5%
&lt;ul&gt;
&lt;li&gt;Partially complete!&lt;/li&gt;
&lt;li&gt;Passive income as a % of W-2: &lt;strong&gt;3.3%&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;1099 income as a % of W-2: &lt;strong&gt;2.3%&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Total side earnings:&lt;/strong&gt; 5.6%!&lt;/li&gt;
&lt;li&gt;This is awesome for not pursuing some more lucrative gigs this year so far. I've been focusing on monetizing KTOMG which has an opportunity cost but for me it's definitely worth doing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ Replace my PCs at home with a single good Ultrabook/Notebook and a NAS
&lt;ul&gt;
&lt;li&gt;Marking as done; no need to get a NAS, I just upgraded to two 1TB SSDs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Push 3 substantive updates to KTOMG throughout the year: Steam review revamp, Raven 4 upgrade, and Linux hosting
&lt;ul&gt;
&lt;li&gt;Migration completed to RavenDB 4 and the IGDB migration &lt;a href="https://twitter.com/keeptrackgames/status/1143354095027347457"&gt;is nearly complete&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ &lt;del&gt;Learn how to cut trim/baseboard and&lt;/del&gt; finish the nursery
&lt;ul&gt;
&lt;li&gt;Let's leave this at just paint since I decided to leave the trim.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stretch-goals"&gt;Stretch Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ Set up a quarterly newsletter
&lt;ul&gt;
&lt;li&gt;Done! Sign up below or at &lt;a href="https://kamranicus.com/newsletter"&gt;https://kamranicus.com/newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⛔ &lt;del&gt;Install luxury vinyl plank in my office&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;I think this will move to next year; &lt;a href="https://twitter.com/kamranayub/status/1143369429469880320"&gt;I did research&lt;/a&gt; and picked out some styles, did a cost estimate, but I don't think I'll get to it this year unless I do it during winter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ &lt;del&gt;Replace baseboard/trim in my son's bedroom&lt;/del&gt; Paint son's bedroom trim.
&lt;ul&gt;
&lt;li&gt;I don't think I need to replace it; I may still paint it, though.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="unplanned-accomplishments"&gt;Unplanned Accomplishments&lt;/h2&gt;
&lt;h3 id="professional"&gt;Professional&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Invited to speak.&lt;/strong&gt; This year was my first year where I was &lt;em&gt;invited to speak&lt;/em&gt; at a conference. I'll be at MDC in October talking about building flexible UIs again (an updated version &lt;a href="https://www.youtube.com/watch?v=mIejhIX7ObE"&gt;of my NDC talk&lt;/a&gt;). I also was invited to speak at the .NET User Group where I spoke about RavenDB 4 (video forthcoming).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;New role at work.&lt;/strong&gt; I was promoted to Lead Engineer and joined the &lt;a href="https://target.com"&gt;Target.com&lt;/a&gt; web platform team. That means I'm actively working behind-the-scenes to make Target.com faster and better for you. I think if I add up all the performance optimizations I've made across the site, it's up in the 2-3 second range which is HUGE. It's pretty fun and I'm surrounded by way smarter people than me which I really enjoy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;More writing.&lt;/strong&gt; In the last update, I mentioned I wrote an article about RavenDB indexes and that I had a second article in the works. Well, I published &lt;a href="https://www.codeproject.com/Articles/4553133/Whats-New-in-RavenDB-4-2"&gt;What's New in RavenDB 4.2&lt;/a&gt; in May! I also posted a non-freelance article on &lt;a href="https://kamranicus.com/posts/2019-05-22-ravendb-devops-automation-with-ansible"&gt;Automating RavenDB 4 with Ansible&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="personal"&gt;Personal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New blog.&lt;/strong&gt; Starting a brand new DIY/crafts-focused blog with my wife, who loves to knit and sew. I focus on home projects and she makes awesome things for us to wear. I'll have more to announce soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="diy"&gt;DIY&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;✅ Completed &lt;a href="https://twitter.com/kamranayub/status/1145410649121538048"&gt;a DIY window egress cover&lt;/a&gt;. I'm super happy with how it turned out. Guide forthcoming in Q3, which will be posted on the new blog 👌.&lt;/li&gt;
&lt;li&gt;⌛ Cassie and I are refinishing an old dresser for our daughter, Saira. Progress will be posted on the new blog.&lt;/li&gt;
&lt;li&gt;✅ Cassie completed her own DIY projects of repainting &lt;strong&gt;two&lt;/strong&gt; old stools!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-thoughts"&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;Q2 went by quickly! We are in the dog days of summer and enjoying it quite a bit. Lots of trips, lots of friends, and still managing to hack away at projects and earn some side coin. The DIY stuff has been a lot of fun and I've appreciated learning new skills. Plus it's fun to work on shared projects with my wife!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;OK, we have already reached Q2 2019! Right smack in the middle of summer. Not long ago, &lt;a href="https://kamranicus.com/posts/2019-04-28-quarterly-1-update"&gt;I posted my first quarterly update&lt;/a&gt; and promised to also send the first quarterly newsletter &lt;em&gt;this quarter&lt;/em&gt;. Well, &lt;a href="https://kamranicus.com/newsletter"&gt;if you've subscribed&lt;/a&gt; you should have a fresh email soon in your inbox which includes a ton of interesting links and some content that is &lt;em&gt;not&lt;/em&gt; included in this post (hey, I have to add value somehow!).&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-06-26-typescript-safe-destructuring-patterns" />
		<id>https://kamranicus.com/posts/2019-06-26-typescript-safe-destructuring-patterns</id>
		<title>Handling Safe Destructuring in TypeScript</title>
		<updated>2019-06-26T13:00:00Z</updated>
		<content>&lt;p&gt;When migrating from JavaScript to TypeScript, you will often run into scenarios that seem difficult to statically type related to destructuring objects.&lt;/p&gt;
&lt;h2 id="destructuring-an-empty-object"&gt;Destructuring an empty object&lt;/h2&gt;
&lt;p&gt;This pattern is showcased using the following code snippet, which is not actual code but &lt;em&gt;does&lt;/em&gt; reflect the semantics of the actual code we reviewed:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;function transformSearchResults(payload = {}, queryParams = {}) {
  const { results } = payload;
  const { searchTerm } = queryParams;

  if (!results) {
    return payload;
  }

  if (searchTerm &amp;amp;&amp;amp; isSearchPayload(payload)) {
    payload.transformedResults = results.map(r =&amp;gt; ({
      ...r,
      anotherProp: true
    }));
  }

  return payload;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function essentially takes a payload, transforms it, and returns the modified payload object.&lt;/p&gt;
&lt;p&gt;Specifically, notice in the function arguments the expressions &lt;code&gt;= {}&lt;/code&gt; which in JavaScript will set a default value of &lt;code&gt;{}&lt;/code&gt; for the parameter if it is &lt;code&gt;undefined&lt;/code&gt;. This is done because on the next 2 lines, we attempt to destructure and pull out some key props of the objects. If &lt;code&gt;payload&lt;/code&gt; or &lt;code&gt;queryParams&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; then the destructuring would blow up and &lt;em&gt;we don't want this code to blow up.&lt;/em&gt; That is pretty reasonable!&lt;/p&gt;
&lt;h2 id="converting-to-typescript"&gt;Converting to TypeScript&lt;/h2&gt;
&lt;p&gt;If we want to migrate this function to TypeScript, it would make sense to add a type annotation for each parameter like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;export interface ResponsePayload {
  results: SearchResult[] | OtherResult[];
}

function transformSearchResults(
  payload: ResponsePayload = {},
  queryParams: QueryStringParams = {}
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are trying to annotate our types properly by telling TypeScript what types we expect these parameters to be. We've declared our API type &lt;code&gt;ResponsePayload&lt;/code&gt; with a &lt;code&gt;results&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;But alas, TypeScript will throw an error immediately:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Property 'results' is missing in type '{}' but required in type 'ResponsePayload'. ts(2741)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this might seem wrong at first on the surface, TypeScript is actually pointing out a &lt;em&gt;code smell&lt;/em&gt; in this function.&lt;/p&gt;
&lt;p&gt;The reason that TypeScript doesn't allow this is because the &lt;code&gt;ResponsePayload&lt;/code&gt; type has a &lt;code&gt;results&lt;/code&gt; property that is &lt;em&gt;required&lt;/em&gt; (cannot be undefined). We know this because we typed it that way, presumably because the API doesn't return undefined. If it did, we could change &lt;code&gt;results&lt;/code&gt; to be optional.&lt;/p&gt;
&lt;p&gt;When converting destructuring code to TypeScript, you will be encouraged to consider the code more critically than before, otherwise you will run into type errors.&lt;/p&gt;
&lt;p&gt;Here's what I ask in this situation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Can the function be simplified to pass a specific primitive value for the parameter?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If I need to pass an object, can I refactor the function to avoid it?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These questions are dependent on the specific case but in the &lt;em&gt;majority&lt;/em&gt; of cases, you can usually remove the need to destructure by asking these questions.&lt;/p&gt;
&lt;p&gt;For example, let's take it step-by-step.&lt;/p&gt;
&lt;h2 id="simplifying-function-parameters"&gt;Simplifying Function Parameters&lt;/h2&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Can the function be simplified to pass a specific primitive value for the parameter?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's the code again:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  payload: ResponsePayload = {}, 
  queryParams: QueryStringParams = {}) 
{
  const { results } = payload;
  const { searchTerm } = queryParams;

  if (!results) {
    return payload;
  }

  if (searchTerm &amp;amp;&amp;amp; isSearchPayload(payload)) {
    payload.transformedResults = results.map(r =&amp;gt; ({
      ...r,
      anotherProp: true
    }));
  }

  return payload;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A quick look will tell us that the answer is &lt;strong&gt;No&lt;/strong&gt; for &lt;code&gt;payload&lt;/code&gt; but &lt;strong&gt;Yes&lt;/strong&gt; for &lt;code&gt;queryParams&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Only &lt;code&gt;results&lt;/code&gt; in &lt;code&gt;payload&lt;/code&gt; is used but &lt;code&gt;payload&lt;/code&gt; is also being mutated, so the function needs the object passed, let's set that aside.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;queryParams&lt;/code&gt;, only &lt;code&gt;searchTerm&lt;/code&gt; is actually referenced, so let's simplify this function to pass only that:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  payload: ResponsePayload = {}, 
  searchTerm?: string) 
{
  const { results } = payload;

  if (!results) {
    return payload;
  }

  if (searchTerm &amp;amp;&amp;amp; isSearchPayload(payload)) {
    payload.transformedResults = results.map(r =&amp;gt; ({
      ...r,
      anotherProp: true
    }));
  }

  return payload;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great! The rest of the code remains the same and we eliminated one unnecessary destructuring.&lt;/p&gt;
&lt;h2 id="approaches-to-refactoring-for-destructuring"&gt;Approaches to Refactoring for Destructuring&lt;/h2&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If I need to pass an object, can I refactor the function to avoid it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Right now the function requires &lt;code&gt;payload&lt;/code&gt; to be provided directly. There are two approaches we could now take:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Specifying a default value for required properties&lt;/li&gt;
&lt;li&gt;Removing the need to mutate an object so we can just pass &lt;code&gt;results&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="providing-default-values-for-properties"&gt;Providing default values for properties&lt;/h3&gt;
&lt;p&gt;If we intend to keep the logic in the function intact, we need to provide a value for all required properties of &lt;code&gt;ResponsePayload&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can do this inline within the function which works well for a small list of parameters:.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  payload: ResponsePayload = { results: [] }, 
  searchTerm?: string)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All fixed; since we provide a default value for &lt;code&gt;results&lt;/code&gt; which isn't &lt;code&gt;undefined&lt;/code&gt; TypeScript is happy.&lt;/p&gt;
&lt;p&gt;We could also choose to provide a default object for more complex situations:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;const defaultPayload: ResponsePayload = {
  results: []
};

function transformSearchResults(
  payload: ResponsePayload = defaultPayload, 
  searchTerm?: string)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works just as well but introduces a dangling object that might not add a ton of value. Can we remove the need for providing &lt;code&gt;payload&lt;/code&gt; in the first place?&lt;/p&gt;
&lt;h3 id="removing-the-object-altogether"&gt;Removing the object altogether&lt;/h3&gt;
&lt;p&gt;The fact that the function mutates the original incoming object is a smell itself. There are cases where that makes sense but in this case, we are transforming results--we should just return the newly mapped results and &lt;em&gt;push the concern of mutating &lt;code&gt;payload&lt;/code&gt;&lt;/em&gt; to a higher-level.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  results: SearchResults[] | OtherResults[], 
  searchTerm?: string) 
{
  if (searchTerm &amp;amp;&amp;amp; isSearchPayload(payload)) {
    return results.map(r =&amp;gt; ({
      ...r,
      anotherProp: true
    }));
  }

  return results;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Nearly there.&lt;/em&gt; We will now receive an error because &lt;code&gt;isSearchPayload&lt;/code&gt; was testing the payload itself. We have two options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Modify &lt;code&gt;isSearchPayload&lt;/code&gt; to inspect results&lt;/li&gt;
&lt;li&gt;Push the concern of checking payload higher&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We could certainly do option 1 but I like option 2 better. It will end up simplifying the &lt;code&gt;results&lt;/code&gt; typing even more because we can &lt;em&gt;know&lt;/em&gt; the results are &lt;em&gt;search results&lt;/em&gt;! This also makes the function name much more accurate:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  results: SearchResults[], 
  searchTerm?: string) 
{
  if (searchTerm) {
    return results.map(r =&amp;gt; ({
      ...r,
      anotherProp: true
    }));
  }

  return results;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There we go; we've totally removed the need for destructuring with this function by simplifying the requirements and avoiding mutation of objects.&lt;/p&gt;
&lt;h3 id="where-did-the-complexity-go"&gt;Where did the complexity go?&lt;/h3&gt;
&lt;p&gt;By refactoring the function we pushed two concerns higher in the call stack:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Is this a search payload (&lt;code&gt;isSearchPayload&lt;/code&gt;)?&lt;/li&gt;
&lt;li&gt;Handling &lt;code&gt;transformedResults&lt;/code&gt; for &lt;code&gt;payload&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That logic still has to exist somewhere but now it can be lifted higher. There is a principle at work here called the &lt;a href="https://en.wikipedia.org/wiki/Command%E2%80%93query_separation"&gt;Command-Query Separation&lt;/a&gt; principle, which says:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&amp;quot;every method should either be a command that performs an action, or a query that returns data to the caller, but not both. In other words, &lt;strong&gt;Asking a question should not change the answer.&lt;/strong&gt;&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before we refactored this function, it violated this principle because it both &lt;em&gt;returned new results&lt;/em&gt; (a query) &lt;strong&gt;and&lt;/strong&gt; had a side effect by mutating the object (a command). Now we've refactored it into a &amp;quot;query&amp;quot; function only.&lt;/p&gt;
&lt;p&gt;If we had inspected the previous way this function was called, you would have seen this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-js"&gt;function (payload?: ResponsePayload) {
  if (!payload) {
    throw new Error(&amp;quot;Missing response payload!&amp;quot;);
  }

  payload = transformSearchResults(payload, queryParams);

  return payload;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should raise a yellow flag since it is returning the object again which implies it may be mutating it (in other words, &amp;quot;it smells&amp;quot;).&lt;/p&gt;
&lt;p&gt;Now that we've refactored the function above, some responsibilities have been pushed higher, which may result in a change like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function (payload?: ResponsePayload) {
  if (!payload) {
    throw new Error(&amp;quot;Missing response payload!&amp;quot;);
  }

  if (isSearchPayload(payload)) {
    return {
      ...payload,
      transformedResults: transformSearchResults(payload.results)
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We avoid mutating the payload directly instead opting to merge the new property in. We now have options to extract this logic, refactor it, etc. which you can decide!&lt;/p&gt;
&lt;h2 id="handling-nested-destructuring"&gt;Handling Nested Destructuring&lt;/h2&gt;
&lt;p&gt;If we're able to remove the need to destructure by simplifying functions that is a win but what if we really need to safely destructure and more specifically, in a nested way?&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-javascript"&gt;function handleData(data = {}) {
  const { meta: { field1, field2, field3 } = {} } = data;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is slightly more complicated and subsequently harder to type &lt;em&gt;and it should be&lt;/em&gt;. One thing I have come to appreciate about TypeScript is that it makes you feel the pain a little more which in turn encourages you to take a step back and question why the code is structured the way it is.&lt;/p&gt;
&lt;p&gt;In this example, we can ask the same question we originally asked: &lt;em&gt;Do we really need &lt;code&gt;data&lt;/code&gt; or can we be more specific?&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="keeping-data"&gt;Keeping &lt;code&gt;data&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Let's say we must keep &lt;code&gt;data&lt;/code&gt; as a parameter. If &lt;code&gt;meta&lt;/code&gt; and all the &lt;code&gt;field*&lt;/code&gt; properties &lt;em&gt;can truly be &lt;code&gt;undefined&lt;/code&gt;&lt;/em&gt; and are marked as so, this code will work.&lt;/p&gt;
&lt;p&gt;As soon as one of them is non-optional, TypeScript will throw an error since we haven't provided defaults.&lt;/p&gt;
&lt;p&gt;For example, let's say &lt;code&gt;data&lt;/code&gt; is typed as:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;interface Data {
  meta: Metadata
}

interface Metadata {
  field1: string;
  field2: boolean;
  field3: object;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;meta&lt;/code&gt; is not optional, it must be provided so the code above will throw an error as no default &lt;code&gt;meta&lt;/code&gt; value is provided and neither are the &lt;code&gt;field*&lt;/code&gt; defaults. Yikes!&lt;/p&gt;
&lt;p&gt;The best approach is to do a refactoring like we did above to simplify the parameters, if possible.&lt;/p&gt;
&lt;p&gt;The next best thing is to &lt;em&gt;remove the default&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function handleData(data: Data) {
  const { meta: { field1, field2, field3 } } = data;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This matches how we've described the types -- that no property can be &lt;code&gt;undefined&lt;/code&gt; so there's no &lt;em&gt;reason&lt;/em&gt; to use a default parameter anymore. If this matches what you expect, there's nothing additional to do.&lt;/p&gt;
&lt;p&gt;What if in practice, things could potentially be &lt;code&gt;undefined&lt;/code&gt; but we still want to ensure the types remain &amp;quot;pure&amp;quot;?&lt;/p&gt;
&lt;p&gt;Then we should push the &amp;quot;guarding&amp;quot; of potentially &lt;code&gt;undefined&lt;/code&gt; values higher up the stack:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function checkData(data: Data | undefined) {
  if (!data) {
    throw new Error(&amp;quot;Data shouldn't be undefined&amp;quot;);
  }

  return handleData(data); // No longer can be undefined
}

function handleData(data: Data) {

  // This is safe to do now
  const { meta: { field1, field2, field3 } } = data;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In general, you should guard as close to the source as possible. This keeps downstream functions simpler and with TypeScript, you can ensure they get passed values that don't &lt;em&gt;need&lt;/em&gt; defaults to be provided.&lt;/p&gt;
&lt;h3 id="supporting-partial-objects"&gt;Supporting partial objects&lt;/h3&gt;
&lt;p&gt;Let's assume that &lt;code&gt;meta&lt;/code&gt; fields &lt;em&gt;can&lt;/em&gt; be partially available, we can simplify and statically type the function like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;interface Data {
  meta: Partial&amp;lt;Metadata&amp;gt;
}

interface Metadata {
  field1: string;
  field2: boolean;
  field3: object;
}

function (data: Data) {

  // This is safe now as `meta` can be partially undefined
  const { meta: { field1, field2, field3 } = {} } = data;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we've &lt;em&gt;explicitly&lt;/em&gt; declared that &lt;code&gt;meta&lt;/code&gt; can be partially defined. This does two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it allows the safe destructuring without compiler errors and,&lt;/li&gt;
&lt;li&gt;it tells the reader to &lt;em&gt;expect&lt;/em&gt; to guard against partially defined fields.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Static types are documentation and now we've called out to expect that &lt;code&gt;meta&lt;/code&gt; can have partial fields. It also allows us to safely set the default object to &lt;code&gt;{}&lt;/code&gt; to avoid errors while destructuring.&lt;/p&gt;
&lt;h2 id="the-last-resort-type-assertions"&gt;The last resort: type assertions&lt;/h2&gt;
&lt;p&gt;There is a hammer we can use as a last resort. If we can't effectively refactor out destructuring or if we really need to force this pattern to avoid changing code, we can use type assertions:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;function transformSearchResults(
  payload = {} as ResponsePayload,
  queryParams = {} as QueryStringParams
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will force TS to treat the empty object &lt;em&gt;as&lt;/em&gt; the types we want--but this introduces potential for bugs as now we are opting out of the type safety. We are putting the responsibility of checking for &lt;code&gt;undefined&lt;/code&gt; on the developer writing the function vs. the TypeScript compiler.&lt;/p&gt;
&lt;p&gt;If you do this with ESLint rules enabled, you'll be greeted with an error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Type assertion on object literals is forbidden, 
use a type annotation instead. 
eslint(&amp;#64;typescript-eslint/no-object-literal-type-assertion)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again this is because it's best to &lt;em&gt;avoid this&lt;/em&gt; in the first place. In order to get this to compile, you'll need to disable the error:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-typescript"&gt;/*  eslint-disable-next-line &amp;#64;typescript-eslint/no-object-literal-type-assertion */
function transformSearchResults(
  payload = {} as ResponsePayload,
  queryParams = {} as QueryStringParams
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At least now, you can later search for these disabled errors as an indication to revisit and refactor later.&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;When migrating to TypeScript, you will run into a lot of issues like this that on the surface feel like you're battling the type system but what I hoped to get across is that &lt;em&gt;TypeScript is forcing you to think more explicitly about how your code is structured and what your intent is.&lt;/em&gt; It will force you to look &lt;em&gt;beyond&lt;/em&gt; the scope of a single function and think more holistically about usage and context.&lt;/p&gt;
&lt;p&gt;When you find yourself trying to disable rules or workaround TypeScript errors through type assertions, you need to take a step back and ask:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Is this the best way to structure this code or is TypeScript hinting that I may need to refactor it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This type of mindset is a &lt;em&gt;shift in thinking&lt;/em&gt; when working with TypeScript, especially when you've come from JavaScript. It may be painful at first but ultimately it will lead to better, hopefully simpler code.&lt;/p&gt;
&lt;p&gt;If you're interested in furthering your understanding of principles like Command-Query Separation and refactoring code, I highly recommend the &lt;a href="https://app.pluralsight.com/library/courses/encapsulation-solid/table-of-contents"&gt;Encapsulation and SOLID course&lt;/a&gt; by Mark Seeman from Pluralsight.&lt;/p&gt;
&lt;p&gt;You can also check out my &lt;a href="https://dev.to/kamranayub/how-to-get-started-using-react-with-typescript-21c"&gt;collection of React and TypeScript content&lt;/a&gt;!&lt;/p&gt;
</content>
		<summary>&lt;p&gt;When migrating from JavaScript to TypeScript, you will often run into scenarios that seem difficult to statically type related to destructuring objects.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-05-22-ravendb-devops-automation-with-ansible" />
		<link rel="enclosure" type="image" href="https://kamranicus.com/images/2019-05-22-masthead.jpg" />
		<id>https://kamranicus.com/posts/2019-05-22-ravendb-devops-automation-with-ansible</id>
		<title>Automating RavenDB 4 with Ansible</title>
		<updated>2019-05-23T01:31:00Z</updated>
		<content>&lt;p&gt;I've finished migrating my database infrastructure for &lt;a href="https://ktomg.com"&gt;Keep Track of My Games&lt;/a&gt; from &lt;a href="https://ravendb.net"&gt;RavenDB&lt;/a&gt; 3.5 to 4.1 (&lt;a href="https://ravendb.net/features/ravendb-42-features"&gt;and soon, 4.2&lt;/a&gt;!).&lt;/p&gt;
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;I thought I'd take a moment to lay out how I used &lt;a href="http://ansible.com"&gt;Ansible&lt;/a&gt;, a popular configuration automation tool, to stand up my RavenDB servers with a bit less manual work and to maintain easy upgrades.&lt;/p&gt;
&lt;p&gt;Since I &lt;a href="https://www.vultr.com/?ref=7006849"&gt;use Vultr for hosting as it's fast and cheap&lt;/a&gt; I decided to &amp;quot;do it right&amp;quot; and plan for the future architecture of KTOMG which I hope to work towards this year, namely hosting on Linux only and cutting a ton of cost from my monthly hosting bill.&lt;/p&gt;
&lt;p&gt;I believe it's important to treat your servers &lt;a href="https://medium.com/&amp;#64;Joachim8675309/devops-concepts-pets-vs-cattle-2380b5aab313"&gt;like cattle, not pets&lt;/a&gt;. Unfortunately, when I originally set up KTOMG on my Vultr VMs I didn't follow my own advice (remember dear reader: Do as I &lt;em&gt;say&lt;/em&gt; not as I &lt;em&gt;do&lt;/em&gt;). I had no automation scripts or configuration management, it was entirely bespoke (with documented steps, granted). I have used &lt;a href="http://ansible.com"&gt;Ansible&lt;/a&gt; in the past and knew it would be a good fit for configuring my new RavenDB VMs.&lt;/p&gt;
&lt;h2 id="preparing-the-vm"&gt;Preparing the VM&lt;/h2&gt;
&lt;p&gt;In order to execute Ansible in the first place, I needed to set up a fresh Ubuntu VM on Vultr. Typically, you don't want to just run as &lt;code&gt;root&lt;/code&gt; for everything in Linux. Instead, you set up dedicated users with permissions to do the things you need. This is the &lt;a href="https://en.wikipedia.org/wiki/Principle_of_least_privilege"&gt;principle of least privilege&lt;/a&gt;. I followed the steps outlined in this &lt;a href="https://www.vultr.com/docs/initial-secure-server-configuration-of-ubuntu-18-04"&gt;basic guide to securing Ubuntu 18.04&lt;/a&gt; to set up a deployment user (&lt;code&gt;deploy&lt;/code&gt;) with appropriate permissions and lock down SSH.&lt;/p&gt;
&lt;p&gt;In Vultr as well I created &lt;a href="https://www.vultr.com/docs/vultr-firewall"&gt;a Firewall group&lt;/a&gt; for the databases that allows my custom SSH port through (from specific IPs) which provides another layer of security.&lt;/p&gt;
&lt;p&gt;The last thing I did was &lt;a href="https://www.ubuntu.com/livepatch"&gt;enable Canonical Live Patch&lt;/a&gt; to hotpatch the servers without rebooting, which is free for 3 servers. I did try to set up unattended upgrades with Ansible but was running into strange apt locking issues.&lt;/p&gt;
&lt;p&gt;Much of this VM setup could be automated at least partially with VM Startup Scripts, a feature Vultr offers. Since it only takes a couple minutes and I only have a few VMs, I didn't bother with that step.&lt;/p&gt;
&lt;p&gt;Once you test logging in via SSH with your new &lt;code&gt;deploy&lt;/code&gt; user, you can configure Ansible to do the same.&lt;/p&gt;
&lt;h2 id="setting-up-your-inventory"&gt;Setting Up Your Inventory&lt;/h2&gt;
&lt;p&gt;Ansible has the idea of an &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html"&gt;inventory&lt;/a&gt; which is the sets of servers to configure. You can group them and provide ansible variables to each one as-needed.&lt;/p&gt;
&lt;p&gt;Ansible also supports &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/intro_dynamic_inventory.html"&gt;dynamic inventory&lt;/a&gt; and &lt;a href="https://docs.ansible.com/ansible/latest/scenario_guides/guide_vultr.html"&gt;even supports Vultr&lt;/a&gt; as a source! I opted to not do this, again due to the limited number of VMs I needed to configure.&lt;/p&gt;
&lt;p&gt;The inventory file looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[dbservers]
10.0.0.1 
10.0.0.2

[dbservers:vars]
ansible_port=12345
ansible_user=deploy
ansible_become_user=ravensu
ansible_become_method=su
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each node is listed that you wish to configure followed by some shared &amp;quot;group&amp;quot; variables that you want to provide to Ansible (they are shared for each node, see &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#ansible-variable-precedence"&gt;variable precedence&lt;/a&gt;). In this case, we are connecting as the user &lt;code&gt;deploy&lt;/code&gt; on a custom SSH port.&lt;/p&gt;
&lt;p&gt;What is &lt;code&gt;ansible_become_user&lt;/code&gt;? For the playbook we'll use, most if not all the tasks requires sudo permissions to configure. The way I accomplish this is by ensuring I &lt;em&gt;connect&lt;/em&gt; via SSH with my approved user (&lt;code&gt;deploy&lt;/code&gt;) who has low permissions, then at playbook runtime specify Ansible to &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/become.html"&gt;become&lt;/a&gt; a sudo user (&lt;code&gt;ravensu&lt;/code&gt;) to execute any privileged tasks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;ansible_become_method=su&lt;/code&gt; was the only option that worked for me against my Vultr VMs and I'm unsure why. The default is &lt;code&gt;sudo&lt;/code&gt; but that wasn't working!&lt;/p&gt;
&lt;h2 id="creating-the-playbook"&gt;Creating the Playbook&lt;/h2&gt;
&lt;p&gt;In my example playbook, I only do a handful of tasks to set up a server. Possibly in the future, it'd be nice to even automate some of the cluster setup tasks you need to perform for Raven, scripted using the HTTP API. &lt;strong&gt;Bonus points:&lt;/strong&gt; Make a formal Ansible role!&lt;/p&gt;
&lt;p&gt;At a high-level, the playbook does the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Docker on Linux&lt;/li&gt;
&lt;li&gt;Copy RavenDB settings and certificates to the remote machine&lt;/li&gt;
&lt;li&gt;Start a RavenDB 4 container with the appropriate volume mounts, networking configuration and environment variables set&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;View the playbook in my &lt;a href="https://github.com/kamranayub/ravendb-devops/blob/master/ansible/ravendb.yml"&gt;ravendb-devops&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;I want to touch on a few key configuration settings:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Port Mapping:&lt;/strong&gt; The &lt;code&gt;published_ports&lt;/code&gt; maps the VM host ports (8081, 38889) to the container ports Raven will bind to (8080, 38888). I don't &lt;em&gt;think&lt;/em&gt; they need to be different but in experimenting with setting up Raven I ended up using different ports.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Settings:&lt;/strong&gt; I am providing a custom &lt;code&gt;settings.json&lt;/code&gt; file from the host machine. This contains pre-set config with IP addresses or DNS for what URLs to bind to and other server settings I wanted to customize.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Certificates:&lt;/strong&gt; Raven uses two different kinds of certificates for server administration: a Cluster certificate and an Admin Client certificate. The cluster certificate is for communicating between nodes securely. The Admin Client cert is for you to connect to Studio securely via your browser. Raven needs the private key so it can authenticate you to the Studio interface using Client Certificate Authentication. Both certs need to be copied to the remote host and we map the host &lt;code&gt;/var/db_cert&lt;/code&gt; to the container path &lt;code&gt;/opt/RavenDB/cert&lt;/code&gt; where Raven looks for certificates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Raven Args:&lt;/strong&gt; The &lt;code&gt;RAVEN_ARGS&lt;/code&gt; env variable sets up some config needed such as the path to the custom &lt;code&gt;settings.json&lt;/code&gt; file we copy over, specifying no setup wizard experience, and what server URL to bind Raven to, in this case the private container address &lt;code&gt;172.17.0.2:8080&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volumes:&lt;/strong&gt; Containers stop and start, they are ephemeral. We don't want to lose our data if a container is deleted either (during an upgrade to a new image, say). Raven stores data within the container at &lt;code&gt;/opt/RavenDB/Server/RavenData&lt;/code&gt; and we map that to our host path &lt;code&gt;/var/db&lt;/code&gt; so we can take backups, persist to SSD or block storage, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Raven is running within a container, so we bind to a private IP. We then &lt;em&gt;map&lt;/em&gt; the container port (8080) to a host port (8081) to expose it. Why don't we bind to &lt;code&gt;10.0.0.1&lt;/code&gt;, the host IP? Because Raven can't see that from within a container and it'll fail to boot up. Instead, the DNS &lt;code&gt;*.ravendb.community&lt;/code&gt; can be used to set up a name that points to the private VM network IP and so you'll never need to expose Raven publicly outside your VM, besides the Studio interface to manage it (which you can lockdown to a limited IP range using Vultr).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note about DNS:&lt;/strong&gt; Notice I am copying certificates over. Where did I get them? I actually generated them all through Setup Wizard in a &lt;strong&gt;fresh local RavenDB installation&lt;/strong&gt; so I could more easily set up a new cluster with certs and DNS already created. You can walk through the same steps with a local Docker container of RavenDB.&lt;/p&gt;
&lt;p&gt;I found the following guides helpful when setting up RavenDB in a container:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/start/installation/setup-wizard"&gt;RavenDB Installation: Setup Wizard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/start/installation/setup-examples/aws-docker-linux-vm"&gt;RavenDB: Docker on AWS Linux VM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/start/installation/running-in-docker-container"&gt;RavenDB: Running in a Docker Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/ravendb/ravendb/"&gt;DockerHub for ravendb/ravendb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="running-the-ansible-playbook"&gt;Running the Ansible Playbook&lt;/h2&gt;
&lt;p&gt;Now that we have our &lt;code&gt;ravendb.yml&lt;/code&gt; playbook and &lt;code&gt;inventory&lt;/code&gt; file, we can run &lt;code&gt;ansible-playbook&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ansible-playbook -i inventory -K ravendb.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;-K&lt;/code&gt; flag will prompt for the &lt;code&gt;ansible_become_user&lt;/code&gt; password. This &lt;strong&gt;should not&lt;/strong&gt; be anywhere in plaintext in source control or your host machine. It either needs to be provided when running the command interactively or via &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/vault.html"&gt;Ansible Vault&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You'll be promoted first for the &lt;code&gt;become_user&lt;/code&gt; password, then the SSH key phrase if necessary, and finally it will run through the playbook.&lt;/p&gt;
&lt;h2 id="finishing-the-installation"&gt;Finishing the Installation&lt;/h2&gt;
&lt;p&gt;If it was successful, everything will be &lt;code&gt;ok&lt;/code&gt; and you can then browse to the Studio in your local browser against your VM's public IP address (and hopefully, only allowing your IP via a firewall rule).&lt;/p&gt;
&lt;p&gt;If the Studio prompts for your certificate, choose it, and now you can finish setting up the cluster:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter your license to activate the cluster&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/server/ongoing-tasks/backup-overview"&gt;Set up backups&lt;/a&gt;, which took all of 5 minutes to hook up to Azure Storage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/server/security/authentication/certificate-management"&gt;Create client certs&lt;/a&gt; for your applications to &lt;a href="https://ravendb.net/docs/article-page/4.2/csharp/server/security/authentication/client-certificate-usage"&gt;connect to Raven programmatically&lt;/a&gt;. When creating a client certificate in the Studio, a zip file will be downloaded automatically after generating containing your &lt;code&gt;pfx&lt;/code&gt; file you can use in your app.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While I've laid out what works for me if you deviate chances are you'll need to do a continuous trial-and-error process to successfully configure your Raven installation. But I hope this provides a nice starting point for configuring a production cluster! If you run into any issues, feel free to leave a comment so others can learn too.&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If you are still learning RavenDB 4, &lt;a href="https://bit.ly/PSRavenDB4"&gt;check out my Getting Started with RavenDB 4&lt;/a&gt; Pluralsight course! It covers the basics like how to get around the Studio, connect with .NET, and more. Using my link won't cost you anything extra but I will get credit for your subscription which helps me out!&lt;/p&gt;
&lt;/blockquote&gt;
</content>
		<summary>&lt;p&gt;I've finished migrating my database infrastructure for &lt;a href="https://ktomg.com"&gt;Keep Track of My Games&lt;/a&gt; from &lt;a href="https://ravendb.net"&gt;RavenDB&lt;/a&gt; 3.5 to 4.1 (&lt;a href="https://ravendb.net/features/ravendb-42-features"&gt;and soon, 4.2&lt;/a&gt;!).&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-04-28-quarterly-1-update" />
		<id>https://kamranicus.com/posts/2019-04-28-quarterly-1-update</id>
		<title>2019 Goals Quarterly Update (Q1)</title>
		<updated>2019-04-28T04:00:00Z</updated>
		<content>&lt;p&gt;This is my first time trying a quarterly update on &lt;a href="https://kamranicus.com/posts/2018-12-20-year-in-review-2019-goals"&gt;my yearly goal setting&lt;/a&gt; but I was updating that old post with progress notes and decided I should just formally document progress every quarter instead of retrofitting an older post. That way if any goals &lt;em&gt;evolve&lt;/em&gt; (which some have!) then I can look back and see that change happening. Also this &lt;em&gt;forces&lt;/em&gt; me to post at least once every 4 months which may get me into the groove of writing more generally.&lt;/p&gt;
&lt;h2 id="progress-on-yearly-goals"&gt;Progress on yearly goals&lt;/h2&gt;
&lt;p&gt;Here are the goals I originally laid out and progress notes for each! At the end I also listed some unplanned accomplishments so I can track those too.&lt;/p&gt;
&lt;h3 id="primary-goals"&gt;Primary Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⌛ Publish 1 Pluralsight course on Azure or TypeScript or React (&lt;del&gt;September&lt;/del&gt; Q4)
&lt;ul&gt;
&lt;li&gt;I have maintenance updates coming in before July but no plans for a course; targeting after summer. Adjusted the target date.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;☑️ Publish 4 Pluralsight guides on React &amp;amp; TypeScript by May
&lt;ul&gt;
&lt;li&gt;I was able to publish &lt;a href="https://kamranicus.com/guides"&gt;3 PS guides&lt;/a&gt; but didn't do a 4th because I actually got an unforeseen opportunity to &lt;a href="https://kamranicus.com/posts/2019-04-04-ravendb-data-modeling-with-indexes"&gt;write a freelance article for RavenDB&lt;/a&gt;! I am marking this goal as completed with a bonus objective!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;✅ Speak at NDC MN on a TypeScript topic
&lt;ul&gt;
&lt;li&gt;I was &lt;a href="https://kamranicus.com/posts/2019-02-01-ndc-minnesota-flexible-ui-with-react-graphql-typescript"&gt;accepted to speak&lt;/a&gt; at NDC MN in May.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Publish 5 technical articles on the blog about Azure, TypeScript, or React
&lt;ul&gt;
&lt;li&gt;I need to plan this out more specifically, though I have a couple ideas! I did post about &lt;a href="https://dev.to/kamranayub/copying-to-the-clipboard-using-react-typescript-material-ui-4fdb"&gt;Copying to clipboard using React and TypeScript&lt;/a&gt; on dev.to.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Personal&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⌛ Pay off all non-mortgage debt
&lt;ul&gt;
&lt;li&gt;I've paid off all loans under my name! 🎉 Cassie is up next. Neither of us have any credit card debt or car loans, it's just the student loans left.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Passive income should account for 2% of earnings, 1099 income for 5%
&lt;ul&gt;
&lt;li&gt;As a percentage of household W-2 income, passive income is at 1% and contracting income is at 1%, making a total of 2%. Not bad and I project passive income will be just at or higher than 2%. I am not quite as sure if contracting will end up being above 5% but I'll try!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;☑️ Replace my PCs at home with a single good Ultrabook/Notebook and a NAS
&lt;ul&gt;
&lt;li&gt;I sold my secondary PC, decided to keep my main PC but instead got a quieter case for recording. I also picked up a used Lenovo Yoga 720 laptop as my personal on-the-go machine. No NAS quite yet, though. I also discovered I have enough parts for yet another entry-level PC but something is up with the motherboard/parts and it won't turn on correctly 🤷‍♂️.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Push 3 substantive updates to KTOMG throughout the year: Steam review revamp, Raven 4 upgrade, and Linux hosting
&lt;ul&gt;
&lt;li&gt;This is my focus for the summer, after NDC. I am nearly done migrating to RavenDB 4!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;☑️ Learn how to cut trim/baseboard and finish the nursery
&lt;ul&gt;
&lt;li&gt;I finished the nursery but decided to &lt;em&gt;paint&lt;/em&gt; the trim/baseboard instead of replacing it outright, for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⌛ Finish my office decor/storage, maybe paint it too
&lt;ul&gt;
&lt;li&gt;I am in the process of selling my old furniture so I can create a &amp;quot;maker&amp;quot; space for me and my kids. I still would like to paint it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="stretch-goals"&gt;Stretch Goals&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Professional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⌛ Set up a quarterly newsletter
&lt;ul&gt;
&lt;li&gt;I am working on this! Look, I now have a mailing list sign up under each post!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Publish 1 more Pluralsight course on Azure or TypeScript or React&lt;/li&gt;
&lt;li&gt;Publish 4 additional Pluralsight guides throughout the year&lt;/li&gt;
&lt;li&gt;Participate in 1 Pluralsight Mentoring session&lt;/li&gt;
&lt;li&gt;Become a Microsoft MVP with a focus on Azure/TypeScript content&lt;/li&gt;
&lt;li&gt;⌛ Speak at a JSConf or ReactConf event
&lt;ul&gt;
&lt;li&gt;So far have not been accepted to any that I've applied to but 🤞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Speak at the React MN meetup about TypeScript or GraphQL&lt;/li&gt;
&lt;li&gt;Record a YouTube video walkthrough of my &lt;a href="https://kamranicus.com/guides/raspberry-pi-3-baby-monitor"&gt;Raspberry Pi baby monitor&lt;/a&gt; written guide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Personal&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1099 income should account for 12% or more (+2% over 2018)&lt;/li&gt;
&lt;li&gt;⌛ Travel completely free somewhere in the US with wife and 2 kids using miles/points
&lt;ul&gt;
&lt;li&gt;We earned our 50K bonus miles from our Chase Sapphire Preferred card (&lt;a href="https://www.choosefi.com/all-articles/travel-rewards/"&gt;you should too!&lt;/a&gt;) but not sure if we will go anywhere using them yet or wait. I was proud of this one because we used the card to pay off my daughter's birth bills, earn the 50K bonus miles, &lt;em&gt;and&lt;/em&gt; are saving the receipts for &lt;a href="https://www.choosefi.com/use-your-hsa-to-provide-income-in-retirement/"&gt;a future tax-free HSA reimbursement&lt;/a&gt;. That was a nice hack!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;⛔ Participate in Ludum Dare during the spring
&lt;ul&gt;
&lt;li&gt;This is a no-go, just didn't have the time. Perhaps in fall/winter!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DIY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://www.youtube.com/watch?v=OJqk2iS_jyQ"&gt;luxury vinyl plank&lt;/a&gt; in my office&lt;/li&gt;
&lt;li&gt;Replace baseboard/trim in my son's bedroom&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="unplanned-accomplishments"&gt;Unplanned Accomplishments&lt;/h2&gt;
&lt;h3 id="professional"&gt;Professional&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Freelance writing for RavenDB.&lt;/strong&gt; I was excited to have the opportunity to work with Hibernating Rhinos, creators of RavenDB, to write two articles on RavenDB. &lt;a href="(https://kamranicus.com/posts/2019-04-04-ravendb-data-modeling-with-indexes)"&gt;One was published in April&lt;/a&gt;, the other will be published in May.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;I made a little app.&lt;/strong&gt; Without much fanfare, &lt;a href="https://reachfi.app/update/2019-02-19-initial-release/"&gt;I released an app&lt;/a&gt; that helps track your savings rate. I'd love to spend more time building it out but it's not a heavy focus right now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Released an OSS project.&lt;/strong&gt; I released a small &lt;a href="https://www.gatsbyjs.org/packages/gatsby-source-typedoc/?=gatsby-source-type"&gt;gatsby source plugin&lt;/a&gt; for generating TypeDoc to source in a Gatsby app for Excalibur's new docs site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="personal"&gt;Personal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Finished 3 books.&lt;/strong&gt; Through Audible and the library, I finished some books: &lt;a href="https://www.goodreads.com/book/show/30835567-hit-refresh"&gt;Hit Refresh&lt;/a&gt;, &lt;a href="https://www.goodreads.com/book/show/35068719-meet-the-frugalwoods"&gt;Meet the Frugalwoods&lt;/a&gt;, and &lt;a href="https://www.goodreads.com/book/show/19288043-gone-girl"&gt;Gone Girl&lt;/a&gt;. I am currently listening to &lt;a href="https://www.goodreads.com/book/show/40187317-mission-critical"&gt;Mission Critical, a Gray Man book&lt;/a&gt; and reading &lt;a href="https://www.goodreads.com/book/show/110312.Conceptual_Blockbusting"&gt;Conceptual Blockbusting&lt;/a&gt; along with &lt;a href="https://www.goodreads.com/book/show/4845.Code_Complete"&gt;Code Complete&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Finished over 60 episodes of ChooseFI&lt;/strong&gt;. It's &lt;a href="https://twitter.com/kamranayub/status/1082390375560593408"&gt;no secret&lt;/a&gt; I love the ChooseFI podcast (and &lt;a href="https://podcasts.apple.com/us/podcast/choosefi/id1187770032"&gt;I'm not alone&lt;/a&gt;). As of this week I'm on episode 67R which means I'm about halfway through the back catalog. &lt;strong&gt;That's about 70 hours of content!&lt;/strong&gt; It's just a fantastic source of information on all aspects of &amp;quot;life optimization&amp;quot; like finance, mindfulness, happiness, and growth. I recommend it whenever I can and if it impacts others the same way it impacted me, then I'll continue singing its praises.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-thoughts"&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;It's been a busy Q1! I owe thanks to &lt;a href="https://todoist.com"&gt;Todoist&lt;/a&gt;, that has transformed how we do things around our household between my wife and I. I've actually enjoyed writing quite a bit though now I feel the itch to come up with content for the blog.&lt;/p&gt;
&lt;p&gt;I have been thinking of what I want Kamranicus.com to be and how it should change to host my content and showcase different things but haven't landed on anything final yet. As you perhaps might notice, in the posts and guides I've enabled Adsense since there are some popular pieces of content on here and I actually earn a little from my Amazon affiliate links already.&lt;/p&gt;
&lt;p&gt;I was also very excited and thankful for the opportunity to do some freelancing as it lit a fire under me to get me working with some business products like &lt;a href="http://fbuy.me/mou3m"&gt;Quickbooks&lt;/a&gt; (use my 50% off referral link) and &lt;a href="http://dochub.com"&gt;Dochub&lt;/a&gt; to better manage my side hustling. It &lt;em&gt;also&lt;/em&gt; derailed my focus on KTOMG for the spring since March-May has just been doing writing leaving much less time to get things done for KTOMG in a timely manner. Oh well!&lt;/p&gt;
&lt;p&gt;Looking towards the summer (Q2), I'm also pretty excited for NDC MN, some course maintenance, and then re-focusing on KTOMG. This will also be our first summer that Cassie and the kids will have off together! So they will be visiting me at work more often and I'll be trying to spend time with them when I can. The grill is already out 🔥🍔&lt;/p&gt;
</content>
		<summary>&lt;p&gt;This is my first time trying a quarterly update on &lt;a href="https://kamranicus.com/posts/2018-12-20-year-in-review-2019-goals"&gt;my yearly goal setting&lt;/a&gt; but I was updating that old post with progress notes and decided I should just formally document progress every quarter instead of retrofitting an older post. That way if any goals &lt;em&gt;evolve&lt;/em&gt; (which some have!) then I can look back and see that change happening. Also this &lt;em&gt;forces&lt;/em&gt; me to post at least once every 4 months which may get me into the groove of writing more generally.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="https://kamranicus.com/posts/2019-04-04-ravendb-data-modeling-with-indexes" />
		<id>https://kamranicus.com/posts/2019-04-04-ravendb-data-modeling-with-indexes</id>
		<title>Data Modeling with Indexes in RavenDB</title>
		<updated>2019-04-04T13:30:00Z</updated>
		<content>&lt;p&gt;I recently had an opportunity to work with &lt;a href="http://ayende.com"&gt;Ayende&lt;/a&gt; from Hibernating Rhinos and creator of &lt;a href="https://ravendb.net"&gt;RavenDB&lt;/a&gt; to take some posts of his regarding data modeling with indexes and bring them to a wider audience. I enjoy working with RavenDB and as you might know, even have a &lt;a href="http://bit.ly/PSRavenDB4"&gt;Getting Started course&lt;/a&gt; on it so I was happy to work with HN to write an article on the subject.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codeproject.com/Articles/1348454/Data-Modeling-with-Indexes-in-RavenDB"&gt;Data Modeling with Indexes in RavenDB&lt;/a&gt;
went live today on CodeProject and covers how indexes work in Raven and some simple to advanced use cases to show off
their power. Be sure to check it out!&lt;/p&gt;
&lt;p&gt;I'm excited to be working with HN to bring some more articles to a wider audience so I'll be sure to share when any other articles go live.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;I recently had an opportunity to work with &lt;a href="http://ayende.com"&gt;Ayende&lt;/a&gt; from Hibernating Rhinos and creator of &lt;a href="https://ravendb.net"&gt;RavenDB&lt;/a&gt; to take some posts of his regarding data modeling with indexes and bring them to a wider audience. I enjoy working with RavenDB and as you might know, even have a &lt;a href="http://bit.ly/PSRavenDB4"&gt;Getting Started course&lt;/a&gt; on it so I was happy to work with HN to write an article on the subject.&lt;/p&gt;</summary>
	</entry>
</feed>